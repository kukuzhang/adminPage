{"version":3,"sources":["webpack:///static/js/0.9ebf94807e677d7e6c34.js","webpack:///./~/zrender/lib/graphic/shape/Polygon.js","webpack:///./~/zrender/lib/graphic/helper/image.js","webpack:///./~/echarts/lib/scale/Scale.js","webpack:///./~/zrender/lib/graphic/Text.js","webpack:///./~/zrender/lib/mixin/Transformable.js","webpack:///./~/zrender/lib/core/util.js","webpack:///./~/echarts/lib/data/helper/completeDimensions.js","webpack:///./~/zrender/lib/core/arrayDiff2.js","webpack:///./~/zrender/lib/vml/Painter.js","webpack:///./~/echarts/lib/util/graphic.js","webpack:///./~/echarts/lib/data/DataDiffer.js","webpack:///./~/echarts/lib/layout/points.js","webpack:///./~/echarts/lib/util/layout.js","webpack:///./~/echarts/lib/chart/helper/Symbol.js","webpack:///./~/echarts/lib/coord/Axis.js","webpack:///./~/zrender/lib/contain/arc.js","webpack:///./~/zrender/lib/contain/path.js","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/zrender/lib/contain/text.js","webpack:///./~/echarts/lib/coord/axisHelper.js","webpack:///./~/zrender/lib/mixin/Animatable.js","webpack:///./~/echarts/lib/component/axis/AxisView.js","webpack:///./~/zrender/lib/graphic/shape/Arc.js","webpack:///./~/echarts/lib/chart/line.js","webpack:///./~/zrender/lib/svg/graphic.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/core-js/library/modules/core.is-iterable.js","webpack:///./~/echarts/lib/helper.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/echarts/lib/coord/cartesian/Grid.js","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/zrender/lib/graphic/shape/Ring.js","webpack:///./~/zrender/lib/vml/graphic.js","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/zrender/lib/core/BoundingRect.js","webpack:///./~/zrender/lib/Storage.js","webpack:///./src/views/sign/index.vue?820e","webpack:///./~/zrender/lib/graphic/Displayable.js","webpack:///./~/zrender/lib/core/curve.js","webpack:///./~/zrender/lib/contain/util.js","webpack:///./~/echarts/lib/component/axisPointer.js","webpack:///./~/echarts/lib/visual/symbol.js","webpack:///./~/zrender/lib/container/Group.js","webpack:///./~/echarts/lib/util/clazz.js","webpack:///./~/babel-runtime/core-js/get-iterator.js","webpack:///./~/zrender/lib/graphic/shape/Polyline.js","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/echarts/lib/model/mixin/lineStyle.js","webpack:///./~/zrender/lib/tool/transformPath.js","webpack:///./~/zrender/lib/core/vector.js","webpack:///./~/zrender/lib/animation/Animator.js","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/zrender/lib/tool/color.js","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/echarts/lib/model/Series.js","webpack:///./~/zrender/lib/graphic/LinearGradient.js","webpack:///./~/zrender/lib/graphic/Path.js","webpack:///./~/echarts/lib/util/format.js","webpack:///./~/zrender/lib/core/timsort.js","webpack:///./~/zrender/lib/Painter.js","webpack:///./~/echarts/lib/component/grid.js","webpack:///./~/echarts/lib/echarts.js","webpack:///./~/zrender/lib/core/GestureMgr.js","webpack:///./~/zrender/lib/animation/easing.js","webpack:///./~/zrender/lib/graphic/shape/Line.js","webpack:///./~/zrender/lib/contain/cubic.js","webpack:///./~/zrender/lib/graphic/Image.js","webpack:///./~/echarts/lib/chart/line/poly.js","webpack:///./~/echarts/lib/model/mixin/colorPalette.js","webpack:///./~/echarts/lib/model/mixin/textStyle.js","webpack:///./~/zrender/lib/graphic/helper/poly.js","webpack:///./~/zrender/lib/Layer.js","webpack:///./~/zrender/lib/graphic/shape/Circle.js","webpack:///./~/echarts/lib/loading/default.js","webpack:///./~/echarts/lib/component/tooltip.js","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/zrender/lib/graphic/shape/Rect.js","webpack:///./~/echarts/lib/processor/dataSample.js","webpack:///./~/echarts/lib/model/Model.js","webpack:///./~/echarts/lib/view/Component.js","webpack:///./~/zrender/lib/svg/helper/Definable.js","webpack:///./~/zrender/lib/svg/Painter.js","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/echarts/lib/util/throttle.js","webpack:///./~/zrender/lib/contain/windingLine.js","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./src/views/sign/index.vue","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/echarts/lib/data/List.js","webpack:///./~/zrender/lib/core/guid.js","webpack:///./~/echarts/lib/chart/helper/labelHelper.js","webpack:///./~/echarts/lib/model/Global.js","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/zrender/lib/graphic/helper/roundRect.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/zrender/lib/svg/helper/ClippathManager.js","webpack:///./~/zrender/lib/mixin/Draggable.js","webpack:///./~/zrender/lib/core/event.js","webpack:///./~/echarts/lib/component/gridSimple.js","webpack:///./~/zrender/lib/animation/Animation.js","webpack:///./src/api/sign.js","webpack:///./~/zrender/lib/svg/core.js","webpack:///./~/zrender/lib/vml/vml.js","webpack:///./~/babel-runtime/core-js/object/entries.js","webpack:///./~/zrender/lib/graphic/shape/Isogon.js","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/core-js/library/fn/is-iterable.js","webpack:///./~/echarts/lib/model/Component.js","webpack:///./~/zrender/lib/core/env.js","webpack:///./~/echarts/lib/view/Chart.js","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/zrender/lib/Element.js","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/zrender/lib/vml/core.js","webpack:///./~/echarts/lib/chart/line/LineView.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/babel-runtime/helpers/slicedToArray.js","webpack:///./~/zrender/lib/graphic/Style.js","webpack:///./~/echarts/lib/scale/Time.js","webpack:///./~/zrender/lib/tool/path.js","webpack:///./~/zrender/lib/core/matrix.js","webpack:///./~/zrender/lib/graphic/Pattern.js","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/zrender/lib/dom/HandlerProxy.js","webpack:///./~/echarts/lib/model/mixin/itemStyle.js","webpack:///./~/echarts/lib/coord/axisModelCreator.js","webpack:///./~/zrender/lib/core/log.js","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/echarts/lib/model/OptionManager.js","webpack:///./~/zrender/lib/export.js","webpack:///./~/echarts/lib/model/mixin/areaStyle.js","webpack:///./~/zrender/lib/graphic/shape/Heart.js","webpack:///./~/core-js/library/fn/get-iterator.js","webpack:///./~/zrender/lib/config.js","webpack:///./~/core-js/library/modules/core.get-iterator.js","webpack:///./~/core-js/library/modules/es7.object.entries.js","webpack:///./~/echarts/lib/util/component.js","webpack:///./~/zrender/lib/svg/helper/GradientManager.js","webpack:///./~/zrender/lib/zrender.js","webpack:///./~/zrender/lib/graphic/RadialGradient.js","webpack:///./~/zrender/lib/svg/svg.js","webpack:///./~/echarts/lib/chart/line/LineSeries.js","webpack:///./~/echarts/lib/util/symbol.js","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./~/element-resize-event/index.js","webpack:///./~/zrender/lib/Handler.js","webpack:///./~/core-js/library/modules/_object-to-array.js","webpack:///./~/zrender/lib/graphic/CompoundPath.js","webpack:///./~/zrender/lib/core/PathProxy.js","webpack:///./~/echarts/lib/visual/seriesColor.js","webpack:///./~/zrender/lib/contain/quadratic.js","webpack:///./src/views/sign/index.vue?e4ea","webpack:///index.vue","webpack:///./~/zrender/lib/graphic/shape/Trochoid.js","webpack:///./~/zrender/lib/graphic/helper/text.js","webpack:///./~/zrender/lib/mixin/Eventful.js","webpack:///./~/echarts/lib/CoordinateSystem.js","webpack:///./~/echarts/lib/coord/axisDefault.js","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./~/zrender/lib/graphic/shape/Star.js","webpack:///./~/zrender/lib/graphic/shape/Sector.js","webpack:///./~/echarts/lib/scale/Interval.js","webpack:///./~/zrender/lib/graphic/mixin/RectText.js","webpack:///./~/zrender/lib/contain/line.js","webpack:///./~/echarts/lib/scale/Ordinal.js","webpack:///./src/views/sign/index.vue?45c3","webpack:///./~/echarts/lib/model/globalDefault.js","webpack:///./~/echarts/lib/ExtensionAPI.js","webpack:///./~/zrender/lib/graphic/shape/Ellipse.js","webpack:///./~/babel-runtime/core-js/is-iterable.js","webpack:///./~/echarts/lib/util/model.js","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/echarts/lib/model/mixin/boxLayout.js","webpack:///./~/core-js/library/fn/object/entries.js","webpack:///./~/zrender/lib/graphic/Gradient.js","webpack:///./~/zrender/lib/core/bbox.js","webpack:///./~/echarts/lib/scale/helper.js","webpack:///./~/echarts/lib/util/number.js","webpack:///./~/zrender/lib/graphic/shape/Droplet.js","webpack:///./~/echarts/lib/scale/Log.js","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/zrender/lib/graphic/shape/Rose.js","webpack:///./~/zrender/lib/animation/Clip.js","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/zrender/index.js","webpack:///./~/zrender/lib/core/LRU.js","webpack:///./~/echarts/lib/component/axis.js"],"names":["webpackJsonp","+UTs","module","exports","__webpack_require__","Path","polyHelper","_default","extend","type","shape","points","smooth","smoothConstraint","buildPath","ctx","+Y0c","findExistImage","newImageOrSrc","cachedImgObj","globalImageCache","get","image","createOrUpdateImage","hostEl","cb","cbPayload","__zrImageSrc","pendingWrap","isImageReady","pending","push","Image","onload","imageOnLoad","put","__cachedImgObj","src","this","i","length","dirty","width","height","LRU","/+sa","Scale","setting","_setting","_extent","Infinity","_interval","init","apply","arguments","clazzUtil","scaleProto","prototype","parse","val","getSetting","name","contain","extent","normalize","scale","unionExtent","other","unionExtentFromData","data","dim","getDataExtent","getExtent","slice","setExtent","start","end","thisExtent","isNaN","getTicksLabels","labels","ticks","getTicks","getLabel","isBlank","_isBlank","setBlank","enableClassExtend","enableClassManagement","registerWhenExtend","/86O","Displayable","zrUtil","textContain","textHelper","Text","opts","call","constructor","brush","prevEl","style","__dirty","normalizeTextStyle","fill","stroke","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","text","bind","needDrawText","setTransform","renderText","restoreTransform","getBoundingRect","_rect","rect","font","textAlign","textVerticalAlign","textPadding","rich","x","y","getStroke","textStroke","textStrokeWidth","w","inherits","/ZBO","isNotAroundZero","EPSILON","matrix","vector","mIdentity","identity","Transformable","position","rotation","origin","transformableProto","transform","needLocalTransform","updateTransform","parent","parentHasTransform","m","create","getLocalTransform","mul","copy","invTransform","invert","dpr","tmpTransform","decomposeTransform","sx","sy","Math","sqrt","atan2","getGlobalScale","transformCoordToLocal","v2","applyTransform","transformCoordToGlobal","target","rotate","/gxq","$override","fn","methods","clone","source","result","typeStr","objToString","len","TYPED_ARRAY","Ctor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","defaults","overlay","getContext","_ctx","createCanvas","indexOf","array","value","clazz","baseClazz","F","clazzPrototype","prop","superClass","mixin","isArrayLike","each","obj","context","forEach","nativeForEach","map","nativeMap","reduce","memo","nativeReduce","filter","nativeFilter","find","func","args","nativeSlice","concat","curry","isFunction","isString","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","Function","normalizeCssArray","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","noop","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","Array","document","createElement","prefixedKey","removeKey","/n1K","completeDimensions","sysDims","opt","applyDim","resultItem","coordDim","coordDimIndex","OTHER_DIMS","otherDims","coordDimNameMap","genName","fromZero","dimsDef","encodeDef","dataDimNameMap","dimCount","retrieveValue","max","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","tooltipName","dataDims","normalizeToArray","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","o","modelUtil","tooltip","label","itemName","dimIndex","isFinite","0fQF","Diff","buildValues","diff","components","newArr","oldArr","componentPos","componentLen","newPos","oldPos","component","removed","indices","count","added","clonePath","path","callback","arrayDiff","equals","a","b","self","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","ret","diagonalPath","basePath","addPath","removePath","undefined","canAdd","canRemove","pushComponent","last","commonCount","tokenize","join","0jKn","parseInt10","parseInt","VMLPainter","root","storage","vmlCore","initVML","vmlViewport","vmlRoot","cssText","appendChild","_vmlRoot","_vmlViewport","resize","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","el","onRemove","onAdd","_firstPaint","createMethodNotSupport","method","zrLog","_util","getType","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","refresh","list","getDisplayList","_paintList","invisible","ignore","__alreadyNotVisible","beforeBrush","brushVML","afterBrush","_getWidth","_getHeight","_width","_height","vmlViewportStyle","dispose","innerHTML","getWidth","getHeight","clear","removeChild","stl","currentStyle","clientWidth","paddingLeft","paddingRight","clientHeight","paddingTop","paddingBottom","0sHC","hasFillOrStroke","fillOrStroke","liftColor","color","colorTool","lift","cacheElementStl","__hoverStlDirty","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","__zr","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","autoColor","z2","doSingleLeaveHover","normalStl","removeHover","setStyle","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","e","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setTextStyleCommon","textStyle","textStyleModel","isEmphasis","EMPTY_OBJ","isRectText","textPosition","getShallow","textOffset","labelRotate","PI","textRotation","textDistance","richResult","ecModel","globalTextStyle","option","richItemNames","getRichItemNames","richTextStyle","getModel","setTokenTextStyle","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textBorderColor","textLineWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontSize","fontFamily","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","animateOrSetProps","isUpdate","props","animatableModel","dataIndex","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","pathTool","BoundingRect","round","mathMax","mathMin","min","graphic","Group","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","extendShape","extendPath","pathData","extendFromString","makePath","layout","createFromString","boundingRect","aspect","cx","cy","resizePath","mergePath","pathRect","calculateTransform","subPixelOptimizeLine","param","lineWidth","x1","x2","subPixelOptimize","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","on","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","labelFetcher","labelDataIndex","labelDimIndex","showNormal","showEmphasis","baseText","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","setTextStyle","specifiedTextStyle","host","setText","labelModel","defaultColor","getFont","gTextStyleModel","updateProps","initProps","getTransform","ancestor","mat","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","elMap1","g","elMap","isGroup","anid","oldEl","newProp","clipPointsByRect","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","replace","1Hui","defaultKeyGetter","item","DataDiffer","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","arr","keyArr","keyGetterName","dataDiffer","existence","add","_add","update","_update","remove","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","idx","unshift","j","1Nix","seriesType","eachSeriesByType","seriesModel","getData","coordSys","coordinateSystem","dims","coordDims","dimensions","coordDimToDataDim","setItemLayout","NaN","dataToPoint","1Xuh","boxLayout","orient","group","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","numberUtil","formatUtil","parsePercent","LOCATION_PARAMS","HV_NAMES","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","parseFloat","getLayoutRect","left","top","right","bottom","verticalMargin","horizontalMargin","positionElement","h","hv","v","boundingMode","elPos","dx","dy","sizeCalculable","hvIdx","mergeLayoutParam","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","getLayoutParams","copyLayoutParams","1bHA","getSymbolSize","symbolSize","getItemVisual","getScale","Symbol","seriesScope","updateData","driftSymbol","drift","symbolUtil","labelHelper","symbolProto","_createSymbol","symbolType","removeAll","hostModel","symbolPath","createSymbol","culling","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","trigger","downplay","setZ","zlevel","z","setDraggable","draggable","cursor","silent","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","useStyle","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","cursorStyle","hasItemOption","itemModel","getItemModel","getItemStyle","elStyle","setColor","opacity","valueDim","findLabelValueDim","off","onEmphasis","ratio","onNormal","fadeOut","2HcM","fixExtentWithBands","nTick","size","linearMap","axisHelper","normalizedExtent","Axis","inverse","onBand","_labelInterval","coord","containData","dataToCoord","getPixelPrecision","dataExtent","clamp","coordToData","t","pointToData","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","span","getBandWidth","axisExtent","getLabelInterval","labelInterval","axisModel","model","interval","isHorizontal","getAxisLabelInterval","getFormattedLabels","2I/p","containStroke","r","startAngle","endAngle","anticlockwise","_l","d","PI2","tmp","normalizeRadian","angle","2M5Q","isAroundEqual","swapExtrema","extrema","windingCubic","x0","y0","x3","y3","nRoots","curve","cubicRootAt","roots","y0_","y1_","nExtrema","unit","cubicAt","cubicExtrema","windingQuadratic","quadraticRootAt","quadraticExtremum","y_","quadraticAt","x_","windingArc","dir","containPath","isStroke","xi","yi","cmd","CMD","M","windingLine","L","line","C","cubic","Q","quadratic","A","rx","ry","theta","dTheta","cos","sin","_x","arc","R","Z","PathProxy","2XvD","interpolate","p0","p1","p2","p3","t2","t3","v0","v1","isLoop","distance","v2Distance","segs","pos","floor","w2","w3","_vector","2uoh","getName","axis","getCategories","getMin","rangeStart","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","setRange","resetRange","3h1/","DEFAULT_FONT","textWidthCache","textLines","split","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","truncateText","ellipsis","options","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","substr","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","exec","matchedIndex","index","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","charAt","percentWidth","bgImg","imageHelper","paddingW","remianTruncWidth","block","str","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","3yJd","OrdinalScale","IntervalScale","getScaleExtent","axisDataLen","boundaryGap","scaleType","fixMin","fixMax","originalExtent","__DEV__","niceScaleExtent","splitNumber","base","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","getClass","ifAxisCrossZero","tickCoords","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","intersect","union","labelFormatter","tpl","tick","getAxisRawValue","42YS","Animator","log","Animatable","animators","animate","loop","animatingShape","zr","pathSplitted","id","animator","during","done","splice","animation","addAnimator","forwardToLast","stop","time","delay","easing","forceAnimate","_animateToShallow","objShallow","propertyCount","when","43ae","updateAxisPointer","axisView","api","payload","forceRender","Clazz","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModel","axisPointerModelHelper","getAxisPointerModel","_axisPointer","render","disposeAxisPointer","axisPointer","extendComponentView","fixValue","superApply","force","axisPointerClazz","registerAxisPointerClass","46eW","clockwise","unitX","unitY","moveTo","4UDB","echarts","PRIORITY","registerVisual","registerLayout","registerProcessor","PROCESSOR","STATISTIC","4w1v","round4","mathRound","isAroundZero","pathHasFill","isText","NONE","pathHasStroke","svgEl","arrayJoin","setAttribute","attrXLink","setAttributeNS","bindStyle","getAttribute","getLineScale","lineDash","lineDashOffset","lineCap","lineJoin","miterLimit","pathDataToString","dataLength","cmdStr","nData","psi","dThetaPositive","isCircle","large","mathCos","mathSin","degree","getVerticalAlignForSvg","verticalAlign","_core","svgPath","__svgEl","createPathProxy","__dirtyPath","beginPath","pathStr","svgTextDrawRectText","svgImage","HTMLImageElement","dw","dh","__imageSrc","svgText","tmpRect","textRect","textSvgEl","__textSvgEl","transformText","align","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","createTextNode","drawRectText","56C7","globalListener","AxisPonterView","globalAxisPointerModel","globalTooltipModel","getComponent","triggerOn","register","currTrigger","dispatchAction","offsetX","offsetY","disopse","getZr","_model","unregister","5PlU","classof","ITERATOR","Iterators","isIterable","it","O","5QRV","createListFromArray","axisModelCommonMixin","Model","util","createList","createScale","mixinAxisModelCommonMethods","5dr1","Cartesian2D","Cartesian","getBaseAxis","getAxesByScale","getAxis","containPoint","axisX","axisY","toLocalCoord","xAxis","yAxis","toGlobalCoord","getOtherAxis","5vFd","isAxisUsedInTheGrid","gridModel","getLabelUnionRect","axisLabelModel","labelCount","ceil","isLabelIgnored","singleRect","getTextRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","axes","onZero","onZeroAxisIndex","otherAxis","canNotOnZeroToAxis","updateAxisTransfrom","coordBase","axisExtentSum","findAxesModels","axesTypes","getReferringComponents","isCartesian2D","Axis2D","gridProto","axisPointerEnabled","getRect","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","getBoxLayoutParams","labelUnionRect","axisIndex","axesMapOnDim","getAxes","getCartesian","xAxisIndex","yAxisIndex","coordList","getCartesians","convertToPixel","finder","_findConvertTarget","cartesian","convertFromPixel","xAxisModel","yAxisModel","coordsList","componentIndex","grid","createAxisCreator","axisPosition","axisPositionUsed","isCategory","axesCount","eachComponent","addAxis","eachSeries","axesModels","getTooltipAxes","baseAxes","otherAxes","baseAxis","grids","67nf","someVectorAt","isTangent","cpx2","cpy2","cubicDerivativeAt","cpx1","cpy1","quadraticDerivativeAt","vec2","_curve","quadraticSubdivide","cubicSubdivide","out","percent","quadraticCurveTo","bezierCurveTo","pointAt","tangentAt","p","6Kqb","r0","6MCj","env","RectText","ZImage","Gradient","canvasSupported","Z2","initRootElStyle","coordsize","coordorigin","encodeHtmlAttribute","s","String","rgb2Str","append","parentNode","getZIndex","maxValue","lastIndexOf","setColorAndOpacity","colorArr","getColorAndAlpha","updateFillNode","zrEl","gradientType","focus","shift","expansion","rectWidth","rectHeight","dimension","stops","colorStops","sort","cs1","cs2","offset","colorAndAlphaList","colors","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateStrokeNode","dashstyle","updateFillAndStroke","vmlEl","isFill","getElementsByTagName","createNode","nPoint","k","_vmlEl","needTransform","strokeEl","det","weight","toStatic","zIndex","removeRectText","appendRectText","isImage","img","tagName","toUpperCase","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","sw","sWidth","sh","sHeight","hasCrop","doc","vmlElStyle","hasRotation","scaleX","scaleY","maxX","maxY","transformFilter","imageTransformPrefix","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","overflow","cropElStyle","filterStr","alpha","textMeasureEl","fontStyleCache","fontStyleCacheCount","fontEl","getFontStyle","fontString","variant","fontVariant","family","body","ex","offsetWidth","fromTextEl","res","pathEl","textPathEl","skewEl","textVmlEl","_textVmlEl","firstChild","nextSibling","textpathok","to","textVmlElStyle","toFixed","string","proto","7XrG","extendComponentModel","dependencies","defaultOption","show","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","backgroundColor","borderColor","borderRadius","borderWidth","extraCssText","animationDurationUpdate","animationEasingUpdate","crossStyle","8V5i","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","isTheme","series","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","8b51","v2ApplyTransform","lt","rb","lb","rt","translate","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","9N6q","shapeCompareFunc","timsort","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","clipPaths","beforeUpdate","afterUpdate","userSetClipPath","clipPath","currentClipPath","parentClipPath","children","_children","__clipPaths","addRoot","__storage","addChildrenToStorage","delRoot","delChildrenFromStorage","_renderList","displayableSortFunc","9meg","_vm","_h","$createElement","_c","_self","staticClass","tab-click","handleClick","$$v","activeName","expression","attrs","inline","icon","on-icon-click","handleIconClick","mobile","_v","effect","content","isCanReadCard","placement","card_id","slot","click","readCard","icon-class","_e","clearCardID","directives","rawName","staticStyle","line-height","gutter","sm","_s","memberInfo","sex","sale_staff","photo","ref","form","rules","formRules","label-width","label-position","labelPosition","store_id","card_type_name","card_start_time","formatDateTime","card_end_time","cardEndTime","$event","submitForm","store_type","todayTongjiCount","today","lastDay","thisWeek","thisMonth","countRange","countRangeByPicker","echat","staticRenderFns","_withStripped","9qnA","Element","Style","dragging","progressive","rectContain","animateStyle","attrKV","AAi1","onet","c","B","n","t1","disc","K","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","acos","ASqrt","THREE_SQRT","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","divider","quadraticProjectPoint","v2Create","distSquare","pow","ABnm","AKXb","axisTrigger","registerPreprocessor","link","coordSysAxesInfo","collect","registerAction","event","AjK0","defaultSymbolType","legendSymbol","eachRawSeriesByType","setVisual","symbol","isSeriesFiltered","rawValue","getRawValue","params","getDataParams","setItemVisual","itemSymbolType","itemSymbolSize","AlhT","childOfName","childCount","_doAdd","addBefore","includeChildren","tmpMat","childRect","BNYN","checkClassType","componentType","test","superCall","methodName","IS_CONTAINER","hasOwn","parseClassType","main","sub","RootClass","mandatoryMethods","$constructor","ExtendedClass","entity","makeContainer","container","registerClass","componentMainType","subType","throwWhenNotFound","getClassesByMainType","hasClass","getAllClassMainTypes","types","hasSubTypes","originalExtend","setReadOnly","properties","BO1k","default","__esModule","BeCT","BuI2","ComponentModel","layoutMode","containLabel","BwZ6","getLineStyle","excludes","getLineDash","lineType","dotSize","dashSize","C1+n","mathAtan2","C7PF","ArrayCtor","scaleAndAdd","lenSquare","div","dot","distanceSquare","negate","lerp","Float32Array","lengthSquare","dist","CCtz","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","cloneValue","rgba2String","rgba","getArrayDim","keyframes","lastValue","createTrackClip","oneTrackDone","propName","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","range","clip","Clip","life","_loop","_delay","ondestroy","_tracks","_clipCount","_doneList","_onframeList","_clipList","tracks","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","clipList","removeClip","getClips","D7EH","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","elOption","axisPointerType","otherExtent","getGlobalExtent","pixelValue","buildElStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","layoutInfo","buildCartesianSingleLabelElOption","getHandleTransform","labelInside","labelMargin","getTransformedPosition","labelDirection","updateHandleTransform","delta","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","tooltipOption","targetShape","makeLineShape","shadow","bandWidth","makeRectShape","DRaW","clampCssByte","clampCssAngle","clampCssFloat","f","parseCssInt","parseCssFloat","cssHueToRgb","m1","m2","lerpNumber","setRgba","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","cached","toLowerCase","kCSSColorTable","op","ep","fname","pop","hsla2rgba","iv","hsla","rgba2hsla","H","S","G","vMin","vMax","deltaR","deltaG","deltaB","level","stringify","toHex","fastLerp","normalizedValue","leftIndex","rightIndex","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","DpwM","initGlobalListeners","useHandler","eventType","dis","makeDispatchAction","records","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","handler","makeGetter","node","EJsE","classUtil","colorPaletteMixin","encodeHTML","addCommas","SeriesModel","seriesIndex","legendDataProvider","visualColorAccessPath","extraOpt","mergeDefaultAndTheme","getInitialData","restoreData","inputPositionParams","themeSubType","getTheme","getDefaultOption","defaultEmphasis","fillDataTextStyle","mergeOption","newSeriesOption","cloneShallow","dataType","getLinkedData","setData","getRawData","dataDimToCoordDim","dataDim","formatTooltip","multipleSeries","formattedValue","setEachItem","dimIdx","dimInfo","getDimensionInfo","dimType","valStr","vertially","formatTime","dimItem","tooltipDims","otherDimToDataDim","colorEl","getTooltipMarker","seriesName","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","getTooltipPosition","dataFormatMixin","Gw4f","globalCoord","global","GxVO","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","strokeContainThreshold","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","ctxLineDash","setLineDash","setScale","setLineDashOffset","rebuildPath","shapeCfg","inBundle","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","localPos","dirtyPath","__clipTarget","animateShape","setShape","Sub","defaultShape","thisShape","HHfb","toCamelCase","upperCaseFirst","match","group1","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","formatTpl","paramsList","encode","seriesLen","$vars","alias","formatTplSimple","s2d","isUTC","date","parseDate","utc","capitalFirst","HKuw","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","I0Vc","isLayerValid","layer","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","_config","devicePixelRatio","Layer","requestAnimationFrame","Painter","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","mainLayer","initContext","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","isSingleCanvas","paintAll","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","getLayer","save","originalEl","_doPaintEl","restore","_progressiveToken","_doPaintList","_furtherProgressive","_progress","Date","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","globalAlpha","currentLayer","drawImage","dom","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","eachLayer","eachOtherLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","elCount","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","configLayer","config","layerConfig","delLayer","display","clearLayer","getRenderedCanvas","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","pixelRatio","clearColor","whIdx","wh","cwh","plt","prb","defaultView","getComputedStyle","pathToImage","canvas","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","clearRect","pathTransform","ImageShape","imgShape","ILx8","Icdr","createRegisterEventWithLowercaseName","eventName","Eventful","MessageCenter","ECharts","theme","prioritySortFunc","prio","themeStorage","_dom","_zr","zrender","renderer","_throttledZrFlush","throttle","flush","backwardCompat","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","_pendingActions","visualFuncs","dataProcessorFuncs","_onframe","doConvertPixel","coordSysList","getCoordinateSystems","parseFinder","updateDirectly","ecIns","mainType","callView","view","__alive","__model","query","__viewId","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","updateMethod","IN_MAIN_PROCESS","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","OPTION_UPDATED","updateMethods","prepareAndUpdate","flushPendingActions","pendingActions","triggerUpdatedEvent","invokeUpdateMethod","componentModel","updateZ","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","viewId","classType","ComponentView","ChartView","__id","__ecComponentInfo","processData","process","stackSeriesData","stackedDataMap","stack","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","chartView","frameDrawNum","needProgressive","blendMode","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","window","GlobalModel","OptionManager","ACTION_REG","one","echartsProto","getDom","setOption","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","getOption","getDevicePixelRatio","painter","getDataURL","excludeComponents","excludesComponentViews","url","toDataURL","getConnectedDataURL","groupId","canvasList","getBoundingClientRect","targetCanvas","refreshImmediately","containPixel","models","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","getViewOfComponentModel","getViewOfSeriesModel","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","browser","weChat","MOUSE_EVENT_NAMES","eveName","dataModel","getSeriesByIndex","eventData","isDisposed","_disposed","idBase","groupIdBase","version","existInstance","getInstanceByDom","connect","disConnect","disconnect","getInstanceById","registerTheme","preprocessorFunc","priority","processorFunc","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","CoordinateSystem","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","layoutFunc","visualFunc","registerLoading","loadingFx","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","number","format","helper","FILTER","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","JMnz","pointPair","center","eventUtil","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","touch","clientToLocal","zrX","zrY","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchScale","pinchCenter","pinchX","pinchY","K0T9","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","KsMi","lineTo","LICT","MAom","_image","MXTC","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","smoothMonotone","connectNulls","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","cp1","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","pt","fixClipWithShadow","stackedOnPoints","stackedOnSmooth","bbox","stackedOnBBox","closePath","MyoG","colorIdx","colorNameMap","colorPalette","NZsM","graphicUtil","PATH_COLOR","getTextColor","No7X","controlPoints","smoothBezier","cp2","smoothSpline","OT4p","returnFalse","createDom","newDom","newDomStyle","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","__currentValues","createBackBuffer","clearAll","haveMotionBLur","globalCompositeOperation","clearColorGradientOrPattern","__canvasGradient","fillRect","Of86","OkSz","textColor","maskColor","mask","labelRect","Oq2I","Ou7x","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","handle","hide","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","seriesDataCount","getAxisInfo","pointerEl","handleModel","isInit","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","createOrUpdate","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","axesInfo","axisDim","doClear","buildLabel","xy","xDimIndex","OxCu","queryDataIndex","getItemGraphicEl","getValues","PD67","roundRectHelper","PWa9","samplers","average","sum","nearest","indexSampler","sampling","valueAxis","rate","sampler","downSample","Pdtn","doGet","pathArr","getParent","getParentMethod","ignoreParent","parsePath","thisParentModel","isEmpty","customizeGetParent","Pgdp","componentUtil","Component","uid","getUID","componentProto","Pmfi","Definable","svgRoot","tagNames","markLabel","_svgRoot","_tagNames","_markLabel","nextId","ZText","_graphic","getDefs","isForceCreating","defs","contains","element","onUpdate","addDom","removeDom","getDoms","doms","tags","markAllUnused","that","markUsed","removeUnused","getSvgProxy","displayable","getTextSvgElement","getSvgElement","Q5xN","checkParentAvailable","insertAfter","prevSibling","prepend","GradientManager","ClippathManager","SVGPainter","gradientManager","clipPathManager","viewport","_viewport","_visibleList","visibleList","listLen","newVisibleList","svgProxy","prevSvgElement","svgElement","textSvgElement","addWithoutUpdate","_getDefs","viewportStyle","pathToSvg","html","outerHTML","unescape","QCrJ","collectAxesInfo","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","coordSysKey","coordSysMap","coordSysModel","triggerAxis","cross","tooltipAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","lineStyle","collectSeriesInfo","seriesTooltipTrigger","seriesTooltipShow","linkOption","checkPropInLink","linkPropValue","axisPropValue","reverse","QD+P","lib","ORIGIN_METHOD","RATE","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","fnAttr","throttleType","originFn","lastThrottleType","QxFU","RKzr","coordExtent","asc","RQuk","injectStyle","ssrContext","disposed","__file","esModule","keys","some","functional","RYbJ","includes","Rfu2","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","getDimension","initData","nameList","dimValueGetter","isDataArray","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","DataCtor","dataItem","dimName","getDataItemValue","isDataItemOption","converDataValue","stackedValue","dimData","dimExtent","getSum","rawIndex","indexOfName","rawDataIndex","indicesOfNearest","maxDistance","nearestIndices","minDist","Number","MAX_VALUE","minDiff","getRawIndex","rawIdx","getRawDataItem","getId","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setLayout","getLayout","getItemLayout","clearItemLayouts","itemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","eachItemGraphicEl","dimensionInfoList","wrapMethod","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","RiVu","idStart","RjA7","labelDims","Rtf0","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","determineSubType","newCptOption","existComponent","createSeriesIndices","filterBySubType","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","exist","dependentModels","ComponentModelClass","optionUpdated","newCptTypes","componentOption","topologicalTravel","isIdInner","queryComponents","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeries","rawSeriesIndex","eachRawSeries","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","SlE6","sign","getStackedOnPoint","stackedOnSameSign","valueStart","baseDataOffset","stackedData","diffData","oldData","newData","diffResult","newIdx","oldIdx","idx1","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","nextPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","current","stackedOnCurrent","stackedOnNext","Sm9T","r1","r2","r3","r4","total","TCXJ","AxisPointerModel","shadowStyle","formatter","precision","TDz/","updateDom","textEl","parentEl","clipPathEl","cloneNode","_textDom","TIfeS","Draggable","_dragStart","_drag","_dragEnd","topTarget","draggingTarget","_draggingTarget","_y","dispatchToElement","dropTarget","findHover","lastDropTarget","_dropTarget","UAiw","calculate","defaultGetZrXY","firefox","layerX","layerY","clientX","clientY","normalizeEvent","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Dispatcher","preventDefault","stopPropagation","cancelBubble","returnValue","UkNE","V4nf","_event","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","removeAnimator","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","Vc3t","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__utils_fetch1__","qs","headers","Content-Type","getRangeTongjiList","VewU","createElementNS","svgURI","VmZa","registerPainter","W3Iv","Wmy2","dStep","deg","XAC3","buildTooltipModel","modelCascade","resultModel","tooltipOpt","refixTooltipPosition","viewWidth","viewHeight","gapH","gapV","getOuterSize","confineTooltipPosition","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","isCenterAlign","TooltipContent","findPointFromSeries","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","tooltipModel","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","dataByCoordSys","_manuallyAxisShowTip","pointInfo","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","dataByAxis","axisValue","seriesDefaultHTML","valueLabel","getValueLabel","seriesDataIndices","valueLabelOpt","idxItem","dataParams","axisId","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","random","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","setContent","getSize","vAlign","viewSize","layoutRect","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","lastIdxItem","newIdxItem","Xd32","Y5nL","getDependencies","deps","arrayPush","themeModel","optList","Class","enableSubTypeDefaulter","enableTopologicalTravel","YNzw","navigator","os","svgSupported","ua","ie","edge","SVGRect","touchEventsSupported","pointerEventsSupported","userAgent","Ylhr","Chart","elSetState","state","toggleHighlight","dataIdx","chartProto","a1Sp","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","aYad","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","zrColor","borderName","camelCase","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","dispatch","onmouseleave","_hideDelay","viewportRootOffset","isShow","ao1T","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","coordSysName","creators","registeredCoordSys","completeDimOpt","categoryIndex","createNameList","categories","itemOpt","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","radius","geo","avYi","guid","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","b8C2","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","v2Add","cI6i","doCreateNode","vmlInited","styleSheets","createStyleSheet","addRule","urn","win","namespaces","zrvml","cO/Q","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getStackedOnPoints","createGridClipShape","hasAnimation","xExtent","yExtent","expandSize","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stopLen","outerColors","minCoord","maxCoord","coordSpan","gradient","SymbolDraw","lineAnimationDiff","lineGroup","symbolDraw","_symbolDraw","_lineGroup","lineStyleModel","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","showSymbol","isSymbolIgnore","_getSymbolIgnoreFunc","_data","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","getAreaStyle","categoryAxis","__points","updatedDataInfo","diffStatus","ptIdx","ct4P","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","output","d7EF","_interopRequireDefault","_isIterable2","_isIterable3","_getIterator2","_getIterator3","sliceIterator","_arr","_n","_d","_i","err","TypeError","d8Tt","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","textOrigin","blend","prevStyle","firstDraw","otherStyle","newStyle","canvasGradient","addColorStop","styleProto","dDRy","scaleHelper","intervalScaleProto","mathCeil","mathFloor","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","niceTicks","approxTickNum","timezoneOffset","getTimezoneOffset","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","nice","fixExtent","_niceExtent","ONE_SECOND","ONE_MINUTE","ONE_DAY","useUTC","dE09","processArc","fa","fs","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","addData","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","pathEls","pathList","pathBundle","appendPath","vMag","dOVI","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","dZ2L","repeat","createPattern","dZZy","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","SymbolCtor","symbolEl","enableAnimation","dnLe","orignalBrush","modified","shadowTemp","dtW/","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","dataIndices","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","axisName","e8/X","eventNameFix","processGesture","proxy","gestureMgr","_gestureMgr","gestureEvent","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","handlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","mousemove","mouseout","toElement","relatedTarget","touchstart","_lastTouchMoment","mousedown","touchmove","touchend","mouseup","handlerDomProxyProto","setCursor","e95b","getBorderLineDash","eH0a","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","registerSubTypeDefaulter","eZxa","debugMode","ecfp","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","em4M","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","fNhY","_Group","_Path","_Image","_CompoundPath","_Text","_Arc","_BezierCurve","_Circle","_Droplet","Droplet","_Ellipse","Ellipse","_Heart","Heart","_Isogon","Isogon","_Line","_Polygon","_Polyline","_Rect","_Ring","_Rose","Rose","_Sector","_Star","Star","_Trochoid","Trochoid","_LinearGradient","_RadialGradient","_Pattern","_BoundingRect","fgF4","fli2","fxRn","g+yZ","g8Ux","anObject","getIterator","iterFn","gSvA","$export","$entries","entries","h0jU","subTypeDefaulters","defaulter","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","hZf2","hv2j","ZRender","getInstance","painterCtors","delInstance","Handler","HandlerProxy","useVML","rendererType","vml","handerProxy","_needsRefresh","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","setCursorStyle","eventHandler","jHiU","jLnL","jMTz","legendHoverLink","clipOverflow","normal","showAllSymbol","hoverLayerThreshold","kK7q","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","koEO","rawAxisPosition","rectBound","axisOffset","posBound","onZeroCoord","dirMap","tickDirection","nameDirection","labelOffset","le/s","resizeListener","srcElement","__resizeRAF__","cancelFrame","requestFrame","__resizeTrigger__","__resizeListeners__","raf","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","objectLoad","contentDocument","__resizeElement__","isIE","unbind","lj6Z","makeEventPacket","eveType","targetInfo","EmptyProxy","isHover","isSilent","SILENT","painterRoot","_hovered","lastHovered","lastHoveredTarget","hovered","hoveredTarget","innerDom","eventArgs","eventPacket","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","mbce","getKeys","toIObject","isEnum","isEntries","me52","paths","_updatePathDirty","moDv","min2","max2","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","_dashedQuadraticTo","arcTo","lineDashSum","appendSize","appendPathData","_expandData","_prevCmd","dash","dashSum","nDash","bezierLen","tmpLen","fromLine","fromCubic","fromQuadratic","fromArc","ux","uy","isEllipse","n5nI","encodeColor","colorAccessPath","oBGI","ofHq","p954","defineProperty","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_slicedToArray__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_slicedToArray___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_entries__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_entries___default","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_extends__","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_extends___default","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof___default","__WEBPACK_IMPORTED_MODULE_5__api_member__","__WEBPACK_IMPORTED_MODULE_6_vuex__","__WEBPACK_IMPORTED_MODULE_7__utils__","__WEBPACK_IMPORTED_MODULE_8__api_sign__","elementResizeEvent","validateEmpty","rule","errMsg","isFinded","validator","stores","myChart","echatData","timerId","computed","winsize","signCountReq","setSignCountReq","start_time","end_time","echatOption","actionReadCard","cardID","tab","ev","_this2","then","response","formName","_this3","$refs","validate","valid","$message","error","onSubmit","_this4","success","now","setTodayTongjiCount","_this5","year","month","day","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_ref","_ref2","return","getSignCount","_this6","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref3","_ref4","drawLine","setEchatWH","$myChartElm","querySelector","$myChart","$myChartWrap","isBaifenbi","days","watch","_this7","created","mounted","getElementById","_this","qg9n","location","num","qjrH","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","isPlainBg","onBgImageLoaded","blockHeiht","qjvV","arrySlice","_$handlers","newList","argLen","triggerWithContext","rctg","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","s/lY","nameLocation","nameRotate","nameTruncate","nameTextStyle","nameGap","triggerEvent","axisLine","axisTick","inside","axisLabel","showMinLabel","showMaxLabel","splitLine","splitArea","areaStyle","timeAxis","logAxis","logBase","s48c","AxisBuilder","ifIgnoreOnTick","getInterval","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","getGroup","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","ticksCoords","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","sGy6","xStart","yStart","ri","sRta","tBuv","roundNumber","_intervalPrecision","getIntervalPrecision","intervalScaleGetTicks","getPrecisionSafe","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","taS8","u+XU","_a","_b","u5Nq","rank","u8/3","locals","u820","platform","animationDuration","progressiveThreshold","uJBW","chartInstance","echartsAPIList","udrn","ox","oy","us/S","vXqC","has","nubmerUtil","subOpts","emphasisOpt","emphasis","normalOpt","subOptName","TEXT_STYLE_OPTIONS","createDataFormatModel","componentSubType","seriesId","marker","labelProp","exists","newCptOptions","cptOption","idMap","existCpt","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","otherDataIndices","lenj","mapToArray","isData","mapA","mapB","hostObj","parsedKey","queryType","includeMainTypes","queryParam","otherDim","vjPX","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","remRadian","onLeft","isRadianAroundZero","fixMinMaxLabelShow","textEls","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","labelLayout","firstRect","nextRect","mRotationBack","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","pt1","pt2","tickModel","tickLen","tickInterval","axisLabelShow","labelRotation","innerTextLayout","categoryData","tickVal","itemLabelModel","labelStr","targetType","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","axisRotation","rawTick","wEU0","wEtr","wRzc","wUOi","fromPoints","xDim","yDim","tx","ty","extremity","wW3A","wWR3","_trim","quantityExponent","LN10","domain","subDomain","subRange","all","returnStr","getPrecision","eIndex","dotIndex","pixelExtent","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","radian","pi2","TIME_REG","timeOffset","quantity","nf","exponent","exp10","reformIntervals","littleThan","lg","close","curr","currClose","isNumeric","wsnU","xCbH","fixRoundingError","originalVal","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","xb/I","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","ynWU","yt/B","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","zAPJ","confineInContainer","styleModel","buildLabelElOption","labelPos","paddings","bgColor","seriesData","textLayout","makeSectorShape","zEoQ","_zrender","_export","zMj2","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","leastUsedEntry","zz1u"],"mappings":"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","file":"static/js/0.9ebf94807e677d7e6c34.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"+UTs\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar polyHelper = __webpack_require__(\"No7X\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"+Y0c\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(\"zMj2\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n\n/***/ \"/+sa\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(\"BNYN\");\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n\n/***/ \"/86O\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(\"9qnA\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar textContain = __webpack_require__(\"3h1/\");\n\nvar textHelper = __webpack_require__(\"qjrH\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"/ZBO\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nvar vector = __webpack_require__(\"C7PF\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"/gxq\":\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n/***/ }),\n\n/***/ \"/n1K\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var modelUtil = __webpack_require__(\"vXqC\");\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n\n/***/ \"0fQF\":\n/***/ (function(module, exports) {\n\n// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"0jKn\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrLog = __webpack_require__(\"eZxa\");\n\nvar vmlCore = __webpack_require__(\"cI6i\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"0sHC\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n\n    var pathTool = __webpack_require__(\"dE09\");\n    var Path = __webpack_require__(\"GxVO\");\n    var colorTool = __webpack_require__(\"DRaW\");\n    var matrix = __webpack_require__(\"dOVI\");\n    var vector = __webpack_require__(\"C7PF\");\n    var Transformable = __webpack_require__(\"/ZBO\");\n    var BoundingRect = __webpack_require__(\"8b51\");\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(\"AlhT\");\n\n    graphic.Image = __webpack_require__(\"MAom\");\n\n    graphic.Text = __webpack_require__(\"/86O\");\n\n    graphic.Circle = __webpack_require__(\"Of86\");\n\n    graphic.Sector = __webpack_require__(\"sRta\");\n\n    graphic.Ring = __webpack_require__(\"6Kqb\");\n\n    graphic.Polygon = __webpack_require__(\"+UTs\");\n\n    graphic.Polyline = __webpack_require__(\"BeCT\");\n\n    graphic.Rect = __webpack_require__(\"PD67\");\n\n    graphic.Line = __webpack_require__(\"KsMi\");\n\n    graphic.BezierCurve = __webpack_require__(\"67nf\");\n\n    graphic.Arc = __webpack_require__(\"46eW\");\n\n    graphic.CompoundPath = __webpack_require__(\"me52\");\n\n    graphic.LinearGradient = __webpack_require__(\"Gw4f\");\n\n    graphic.RadialGradient = __webpack_require__(\"jHiU\");\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    var subPixelOptimize = graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            var style = el.style;\n            var insideRollbackOpt = style.insideRollbackOpt;\n\n            // Consider case: only `position: 'top'` is set on emphasis, then text\n            // color should be returned to `autoColor`, rather than remain '#fff'.\n            // So we should rollback then apply again after style merging.\n            insideRollbackOpt && rollbackInsideStyle(style);\n\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            style.extendFrom(el.__hoverStl);\n\n            // Do not save `insideRollback`.\n            if (insideRollbackOpt) {\n                applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt);\n\n                // textFill may be rollbacked to null.\n                if (style.textFill == null) {\n                    style.textFill = insideRollbackOpt.autoColor;\n                }\n            }\n\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * @param {Object|module:zrender/graphic/Style} normalStyle\n     * @param {Object} emphasisStyle\n     * @param {module:echarts/model/Model} normalModel\n     * @param {module:echarts/model/Model} emphasisModel\n     * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n     * @param {Object} [opt.defaultText]\n     * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n     *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {Object} [normalSpecified]\n     * @param {Object} [emphasisSpecified]\n     */\n    graphic.setLabelStyle = function (\n        normalStyle, emphasisStyle,\n        normalModel, emphasisModel,\n        opt,\n        normalSpecified, emphasisSpecified\n    ) {\n        opt = opt || EMPTY_OBJ;\n        var labelFetcher = opt.labelFetcher;\n        var labelDataIndex = opt.labelDataIndex;\n        var labelDimIndex = opt.labelDimIndex;\n\n        // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n        // is not supported util someone requests.\n\n        var showNormal = normalModel.getShallow('show');\n        var showEmphasis = emphasisModel.getShallow('show');\n\n        // Consider performance, only fetch label when necessary.\n        // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n        // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n        var baseText = (showNormal || showEmphasis)\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex)\n                    : null,\n                opt.defaultText\n            )\n            : null;\n        var normalStyleText = showNormal ? baseText : null;\n        var emphasisStyleText = showEmphasis\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex)\n                    : null,\n                baseText\n            )\n            : null;\n\n        // Optimize: If style.text is null, text will not be drawn.\n        if (normalStyleText != null || emphasisStyleText != null) {\n            // Always set `textStyle` even if `normalStyle.text` is null, because default\n            // values have to be set on `normalStyle`.\n            // If we set default values on `emphasisStyle`, consider case:\n            // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n            // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n            // Then the 'red' will not work on emphasis.\n            setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n            setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n        }\n\n        normalStyle.text = normalStyleText;\n        emphasisStyle.text = emphasisStyleText;\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     * @param {boolean} [isEmphasis]\n     */\n    var setTextStyle = graphic.setTextStyle = function (\n        textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis\n    ) {\n        setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style.\n     * @deprecated\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        var isEmphasis;\n\n        if (defaultColor === false) {\n            isEmphasis = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.autoColor = defaultColor;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n     *              If autoColor specified, it is used as default textFill.\n     *      useInsideStyle:\n     *              `true`: Use inside style (textFill, textStroke, textLineWidth)\n     *                  if `textFill` is not specified.\n     *              `false`: Do not use inside style.\n     *              `null/undefined`: use inside style if `isRectText` is true and\n     *                  `textFill` is not specified and textPosition contains `'inside'`.\n     *      forceRich: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (isEmphasis ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), isEmphasis ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n        // In merge mode, default value should not be given.\n        globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n\n        textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt)\n            || globalTextStyle.color;\n        textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt)\n            || globalTextStyle.textBorderColor;\n        textStyle.textLineWidth = zrUtil.retrieve2(\n            textStyleModel.getShallow('textBorderWidth'),\n            globalTextStyle.textBorderWidth\n        );\n\n        if (!isEmphasis) {\n            if (isBlock) {\n                // Always set `insideRollback`, for clearing previous.\n                var originalTextPosition = textStyle.textPosition;\n                textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt);\n                // Save original textPosition, because style.textPosition will be repalced by\n                // real location (like [10, 30]) in zrender.\n                textStyle.insideOriginalTextPosition = originalTextPosition;\n                textStyle.insideRollbackOpt = opt;\n            }\n\n            // Set default finally.\n            if (textStyle.textFill == null) {\n                textStyle.textFill = opt.autoColor;\n            }\n        }\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    function applyInsideStyle(textStyle, textPosition, opt) {\n        var useInsideStyle = opt.useInsideStyle;\n        var insideRollback;\n\n        if (textStyle.textFill == null\n            && useInsideStyle !== false\n            && (useInsideStyle === true\n                || (opt.isRectText\n                    && textPosition\n                    // textPosition can be [10, 30]\n                    && typeof textPosition === 'string'\n                    && textPosition.indexOf('inside') >= 0\n                )\n            )\n        ) {\n            insideRollback = {\n                textFill: null,\n                textStroke: textStyle.textStroke,\n                textLineWidth: textStyle.textLineWidth\n            };\n            textStyle.textFill = '#fff';\n            // Consider text with #fff overflow its container.\n            if (textStyle.textStroke == null) {\n                textStyle.textStroke = opt.autoColor;\n                textStyle.textLineWidth == null && (textStyle.textLineWidth = 2);\n            }\n        }\n\n        return insideRollback;\n    }\n\n    function rollbackInsideStyle(style) {\n        var insideRollback = style.insideRollback;\n        if (insideRollback) {\n            style.textFill = insideRollback.textFill;\n            style.textStroke = insideRollback.textStroke;\n            style.textLineWidth = insideRollback.textLineWidth;\n        }\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n\n/***/ \"1Hui\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n\n/***/ \"1Nix\":\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n/***/ }),\n\n/***/ \"1Xuh\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var BoundingRect = __webpack_require__(\"8b51\");\n    var numberUtil = __webpack_require__(\"wWR3\");\n    var formatUtil = __webpack_require__(\"HHfb\");\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n\n/***/ \"1bHA\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var symbolUtil = __webpack_require__(\"kK7q\");\n    var graphic = __webpack_require__(\"0sHC\");\n    var numberUtil = __webpack_require__(\"wWR3\");\n    var labelHelper = __webpack_require__(\"RjA7\");\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n\n        if (valueDim != null) {\n            graphic.setLabelStyle(\n                elStyle, hoverItemStyle, labelModel, hoverLabelModel,\n                {\n                    labelFetcher: seriesModel,\n                    labelDataIndex: idx,\n                    defaultText: data.get(valueDim, idx),\n                    isRectText: true,\n                    autoColor: color\n                }\n            );\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        // FIXME\n        // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = null;\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n\n/***/ \"2HcM\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(\"wWR3\");\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var axisHelper = __webpack_require__(\"3yJd\");\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n\n/***/ \"2I/p\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(\"ABnm\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ \"2M5Q\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(\"moDv\");\n\nvar line = __webpack_require__(\"u+XU\");\n\nvar cubic = __webpack_require__(\"LICT\");\n\nvar quadratic = __webpack_require__(\"oBGI\");\n\nvar arc = __webpack_require__(\"2I/p\");\n\nvar _util = __webpack_require__(\"ABnm\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(\"AAi1\");\n\nvar windingLine = __webpack_require__(\"QxFU\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ \"2XvD\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(\"C7PF\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"2uoh\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var axisHelper = __webpack_require__(\"3yJd\");\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis\n                && min != null\n                && min !== 'dataMin'\n                && typeof min !== 'function'\n                && !zrUtil.eqNaN(min)\n            ) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis\n                && max != null\n                && max !== 'dataMax'\n                && typeof max !== 'function'\n                && !zrUtil.eqNaN(max)\n            ) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"3h1/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar imageHelper = __webpack_require__(\"+Y0c\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n\n/***/ \"3yJd\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(\"u5Nq\");\n    var IntervalScale = __webpack_require__(\"tBuv\");\n    __webpack_require__(\"dDRy\");\n    __webpack_require__(\"xCbH\");\n    var Scale = __webpack_require__(\"/+sa\");\n\n    var numberUtil = __webpack_require__(\"wWR3\");\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var textContain = __webpack_require__(\"3h1/\");\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        else if (typeof min === 'function') {\n            min = min({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n        else if (typeof max === 'function') {\n            max = max({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n\n/***/ \"42YS\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(\"CCtz\");\n\nvar log = __webpack_require__(\"eZxa\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"43ae\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(\"QCrJ\");\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(\"Icdr\").extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n\n/***/ \"46eW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"4UDB\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var echarts = __webpack_require__(\"Icdr\");\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(\"jMTz\");\n    __webpack_require__(\"cO/Q\");\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(\"AjK0\"), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(\"1Nix\"), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(\"PWa9\"), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(\"UkNE\");\n\n\n/***/ }),\n\n/***/ \"4w1v\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(\"VewU\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = __webpack_require__(\"moDv\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar textContain = __webpack_require__(\"3h1/\");\n\nvar textHelper = __webpack_require__(\"qjrH\");\n\nvar Text = __webpack_require__(\"/86O\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale);\n    attr(svgEl, 'paint-order', 'stroke');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive % PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    }\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;\n\n/***/ }),\n\n/***/ \"56C7\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(\"DpwM\");\n\n    var AxisPonterView = __webpack_require__(\"Icdr\").extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n\n/***/ \"5PlU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar classof = __webpack_require__(\"RY/4\");\nvar ITERATOR = __webpack_require__(\"dSzd\")('iterator');\nvar Iterators = __webpack_require__(\"/bQp\");\nmodule.exports = __webpack_require__(\"FeBl\").isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n\n\n/***/ }),\n\n/***/ \"5QRV\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(\"ao1T\");\n    var symbolUtil = __webpack_require__(\"kK7q\");\n    var axisHelper = __webpack_require__(\"3yJd\");\n    var axisModelCommonMixin = __webpack_require__(\"2uoh\");\n    var Model = __webpack_require__(\"Pdtn\");\n    var util = __webpack_require__(\"/gxq\");\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: __webpack_require__(\"/n1K\"),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"5dr1\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var Cartesian = __webpack_require__(\"ct4P\");\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n\n/***/ \"5vFd\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(\"1Xuh\");\n    var axisHelper = __webpack_require__(\"3yJd\");\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var Cartesian2D = __webpack_require__(\"5dr1\");\n    var Axis2D = __webpack_require__(\"RKzr\");\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(\"BuI2\");\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var axisLabelModel = axisModel.getModel('axisLabel');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = axisLabelModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        each(axesMap.x, function (xAxis) {\n            fixAxisOnZero(axesMap, 'y', xAxis);\n        });\n        each(axesMap.y, function (yAxis) {\n            fixAxisOnZero(axesMap, 'x', yAxis);\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    function fixAxisOnZero(axesMap, otherAxisDim, axis) {\n        // onZero can not be enabled in these two situations:\n        // 1. When any other axis is a category axis.\n        // 2. When no axis is cross 0 point.\n        var axes = axesMap[otherAxisDim];\n\n        if (!axis.onZero) {\n            return;\n        }\n\n        var onZeroAxisIndex = axis.onZeroAxisIndex;\n\n        // If target axis is specified.\n        if (onZeroAxisIndex != null) {\n            var otherAxis = axes[onZeroAxisIndex];\n            if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n                axis.onZero = false;\n            }\n            return;\n        }\n\n        for (var idx in axes) {\n            if (axes.hasOwnProperty(idx)) {\n                var otherAxis = axes[idx];\n                if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n                    onZeroAxisIndex = +idx;\n                    break;\n                }\n            }\n        }\n\n        if (onZeroAxisIndex == null) {\n            axis.onZero = false;\n        }\n        axis.onZeroAxisIndex = onZeroAxisIndex;\n    }\n\n    function canNotOnZeroToAxis(axis) {\n        return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n    }\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {number} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n                axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(\"rctg\").register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n\n/***/ \"67nf\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar _curve = __webpack_require__(\"AAi1\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"6Kqb\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"6MCj\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar _vector = __webpack_require__(\"C7PF\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar colorTool = __webpack_require__(\"DRaW\");\n\nvar textContain = __webpack_require__(\"3h1/\");\n\nvar textHelper = __webpack_require__(\"qjrH\");\n\nvar RectText = __webpack_require__(\"taS8\");\n\nvar Displayable = __webpack_require__(\"9qnA\");\n\nvar ZImage = __webpack_require__(\"MAom\");\n\nvar Text = __webpack_require__(\"/86O\");\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar PathProxy = __webpack_require__(\"moDv\");\n\nvar Gradient = __webpack_require__(\"wRzc\");\n\nvar vmlCore = __webpack_require__(\"cI6i\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}\n\n/***/ }),\n\n/***/ \"7XrG\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(\"Icdr\").extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"8V5i\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var compatStyle = __webpack_require__(\"xb/I\");\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option, isTheme) {\n        compatStyle(option, isTheme);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ \"8b51\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"9N6q\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(\"/gxq\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar Group = __webpack_require__(\"AlhT\");\n\nvar timsort = __webpack_require__(\"HKuw\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"9meg\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"app-container sign\"\n  }, [_c('el-tabs', {\n    on: {\n      \"tab-click\": _vm.handleClick\n    },\n    model: {\n      value: (_vm.activeName),\n      callback: function($$v) {\n        _vm.activeName = $$v\n      },\n      expression: \"activeName\"\n    }\n  }, [_c('el-tab-pane', {\n    attrs: {\n      \"label\": \"会员签到\",\n      \"name\": \"first\"\n    }\n  }, [_c('el-form', {\n    staticClass: \"search-member-form\",\n    attrs: {\n      \"inline\": true\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"手机号码\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"placeholder\": \"请输入会员手机号码\",\n      \"icon\": \"search\",\n      \"on-icon-click\": _vm.handleIconClick\n    },\n    model: {\n      value: (_vm.mobile),\n      callback: function($$v) {\n        _vm.mobile = $$v\n      },\n      expression: \"mobile\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"会员卡\"\n    }\n  }, [_c('el-tooltip', {\n    attrs: {\n      \"effect\": \"dark\",\n      \"content\": (_vm.isCanReadCard ? '点击按钮读卡' : '放置卡片读卡'),\n      \"placement\": \"top\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"placeholder\": \"读卡器读取\"\n    },\n    model: {\n      value: (_vm.card_id),\n      callback: function($$v) {\n        _vm.card_id = $$v\n      },\n      expression: \"card_id\"\n    }\n  }, [(_vm.isCanReadCard) ? _c('el-button', {\n    attrs: {\n      \"slot\": \"prepend\"\n    },\n    on: {\n      \"click\": _vm.readCard\n    },\n    slot: \"prepend\"\n  }, [_c('span', {\n    staticClass: \"read-card\"\n  }, [_c('icon-svg', {\n    attrs: {\n      \"icon-class\": \"readcard\"\n    }\n  })], 1)]) : _vm._e(), _vm._v(\" \"), (_vm.isCanReadCard) ? _c('el-button', {\n    attrs: {\n      \"slot\": \"append\",\n      \"icon\": \"delete\"\n    },\n    on: {\n      \"click\": _vm.clearCardID\n    },\n    slot: \"append\"\n  }) : _vm._e()], 1)], 1)], 1)], 1), _vm._v(\" \"), _c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.isFinded),\n      expression: \"isFinded\"\n    }],\n    staticClass: \"sign-member-info\"\n  }, [_c('el-card', {\n    staticClass: \"box-card\"\n  }, [_c('div', {\n    staticClass: \"clearfix\",\n    attrs: {\n      \"slot\": \"header\"\n    },\n    slot: \"header\"\n  }, [_c('span', {\n    staticStyle: {\n      \"line-height\": \"36px\"\n    }\n  }, [_vm._v(\"会员信息\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text item\"\n  }, [_c('el-row', {\n    attrs: {\n      \"gutter\": 10\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"sm\": 16\n    }\n  }, [_c('el-row', {\n    attrs: {\n      \"gutter\": 10\n    }\n  }, [_c('el-col', {\n    staticClass: \"info-item\",\n    attrs: {\n      \"sm\": 12\n    }\n  }, [_c('label', [_vm._v(\"姓名: \")]), _vm._v(\" \"), _c('span', [_vm._v(_vm._s(_vm.memberInfo.name || '未设置'))])]), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"info-item\",\n    attrs: {\n      \"sm\": 12\n    }\n  }, [_c('label', [_vm._v(\"性别: \")]), _vm._v(\" \"), _c('span', [_vm._v(_vm._s(!_vm.memberInfo.sex ? '未知' : _vm.memberInfo.sex === 1 ? '男' : '女'))])]), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"info-item\",\n    attrs: {\n      \"sm\": 12\n    }\n  }, [_c('label', [_vm._v(\"电话: \")]), _vm._v(\" \"), _c('span', [_vm._v(_vm._s(_vm.memberInfo.mobile || '未设置'))])]), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"info-item\",\n    attrs: {\n      \"sm\": 12\n    }\n  }, [_c('label', [_vm._v(\"销售: \")]), _vm._v(\" \"), _c('span', [_vm._v(_vm._s(_vm.memberInfo.sale_staff || '未设置'))])])], 1)], 1), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"sm\": 8\n    }\n  }, [_c('div', {\n    staticClass: \"grid-content user-photo\"\n  }, [(_vm.memberInfo.photo) ? _c('img', {\n    attrs: {\n      \"src\": _vm.memberInfo.photo\n    }\n  }) : _c('span', [_vm._v(\"该会员暂无图片\")])])])], 1)], 1)]), _vm._v(\" \"), _c('el-card', {\n    staticClass: \"box-card\"\n  }, [_c('div', {\n    staticClass: \"clearfix\",\n    attrs: {\n      \"slot\": \"header\"\n    },\n    slot: \"header\"\n  }, [_c('span', {\n    staticStyle: {\n      \"line-height\": \"36px\"\n    }\n  }, [_vm._v(\"签到\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text item\"\n  }, [_c('el-form', {\n    ref: \"form\",\n    staticClass: \"sign-form\",\n    attrs: {\n      \"model\": _vm.form,\n      \"rules\": _vm.formRules,\n      \"label-width\": \"150px\",\n      \"label-position\": _vm.labelPosition\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"选择场馆\",\n      \"prop\": \"store_id\"\n    }\n  }, [_c('el-radio-group', {\n    model: {\n      value: (_vm.form.store_id),\n      callback: function($$v) {\n        _vm.form.store_id = $$v\n      },\n      expression: \"form.store_id\"\n    }\n  }, [_c('el-radio', {\n    attrs: {\n      \"label\": 2\n    }\n  }, [_vm._v(\"龙珠店\")]), _vm._v(\" \"), _c('el-radio', {\n    attrs: {\n      \"label\": 1\n    }\n  }, [_vm._v(\"海德店\")])], 1)], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"卡片种类\",\n      \"prop\": \"mobile\"\n    }\n  }, [_c('el-radio-group', {\n    staticClass: \"card_type\",\n    model: {\n      value: (_vm.form.mobile),\n      callback: function($$v) {\n        _vm.form.mobile = $$v\n      },\n      expression: \"form.mobile\"\n    }\n  }, [_c('el-radio', {\n    attrs: {\n      \"label\": _vm.memberInfo.mobile\n    }\n  }, [_c('div', [_vm._v(_vm._s(_vm.memberInfo.card_id || '无卡号'))]), _vm._v(\" \"), _c('div', [_vm._v(_vm._s(_vm.memberInfo.card_type_name || '暂未绑定会员卡'))]), _vm._v(\" \"), _c('div', [_vm._v(_vm._s(_vm.memberInfo.card_start_time ? _vm.formatDateTime(_vm.memberInfo.card_start_time) + ' 至 ' + _vm.formatDateTime(_vm.memberInfo.card_end_time) : '有效期无'))]), _vm._v(\" \"), _c('div', [_vm._v(\"剩余：\\n                                            \"), _c('span', {\n    staticStyle: {\n      \"color\": \"#fd6440\"\n    }\n  }, [_vm._v(_vm._s(_vm.cardEndTime(_vm.memberInfo.card_end_time) >= 0 ? _vm.cardEndTime(_vm.memberInfo.card_end_time) : 0) + \" 天\")])])])], 1)], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"\"\n    }\n  }, [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.submitForm('form')\n      }\n    }\n  }, [_vm._v(\"确认签到\")])], 1)], 1)], 1)])], 1)], 1), _vm._v(\" \"), _c('el-tab-pane', {\n    staticClass: \"sign-tongji\",\n    attrs: {\n      \"label\": \"签到记录\",\n      \"name\": \"second\"\n    }\n  }, [_c('div', {\n    staticClass: \"select_store\"\n  }, [_c('el-select', {\n    attrs: {\n      \"placeholder\": \"请选择\"\n    },\n    model: {\n      value: (_vm.store_type),\n      callback: function($$v) {\n        _vm.store_type = $$v\n      },\n      expression: \"store_type\"\n    }\n  }, _vm._l((_vm.stores), function(item) {\n    return _c('el-option', {\n      key: item.value,\n      attrs: {\n        \"label\": item.label,\n        \"value\": item.value\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('el-row', {\n    attrs: {\n      \"gutter\": 20\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"sm\": 8\n    }\n  }, [_c('el-card', {\n    staticClass: \"today-tongji-wrap\"\n  }, [_c('div', {\n    staticClass: \"today-tongji\"\n  }, [_c('div', {\n    staticClass: \"today-tongji-title\"\n  }, [_vm._v(\"\\n                                今日签到会员\\n                            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"today-tongji-count\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.todayTongjiCount.today) + \"\\n                            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"other\"\n  }, [_c('div', [_vm._v(\"昨日：\" + _vm._s(_vm.todayTongjiCount.lastDay) + \" \")]), _vm._v(\" \"), _c('div', [_vm._v(\"本周：\" + _vm._s(_vm.todayTongjiCount.thisWeek) + \" \")]), _vm._v(\" \"), _c('div', [_vm._v(\"本月：\" + _vm._s(_vm.todayTongjiCount.thisMonth))])])])])], 1), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"my-chart-wrap\",\n    attrs: {\n      \"sm\": 16\n    }\n  }, [_c('el-card', [_c('div', {\n    staticClass: \"count-range\"\n  }, [_c('el-radio-group', {\n    model: {\n      value: (_vm.countRange),\n      callback: function($$v) {\n        _vm.countRange = $$v\n      },\n      expression: \"countRange\"\n    }\n  }, [_c('el-radio-button', {\n    attrs: {\n      \"label\": \"近30天\"\n    }\n  }), _vm._v(\" \"), _c('el-radio-button', {\n    attrs: {\n      \"label\": \"近15天\"\n    }\n  }), _vm._v(\" \"), _c('el-radio-button', {\n    attrs: {\n      \"label\": \"近7天\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-date-picker', {\n    attrs: {\n      \"type\": \"daterange\",\n      \"placeholder\": \"选择日期范围\"\n    },\n    model: {\n      value: (_vm.countRangeByPicker),\n      callback: function($$v) {\n        _vm.countRangeByPicker = $$v\n      },\n      expression: \"countRangeByPicker\"\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"myChart\"\n  }, [_c('div', {\n    style: ({\n      width: _vm.echat.width + 'px',\n      height: _vm.echat.height + 'px'\n    }),\n    attrs: {\n      \"id\": \"myChart\"\n    }\n  })])])], 1)], 1)], 1)], 1)], 1)\n},staticRenderFns: []}\nmodule.exports.render._withStripped = true\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n     require(\"vue-hot-reload-api\").rerender(\"data-v-577d32ea\", module.exports)\n  }\n}\n\n/***/ }),\n\n/***/ \"9qnA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Style = __webpack_require__(\"d8Tt\");\n\nvar Element = __webpack_require__(\"avYi\");\n\nvar RectText = __webpack_require__(\"taS8\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"AAi1\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(\"C7PF\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n\n/***/ \"ABnm\":\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n\n/***/ \"AKXb\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(\"Icdr\");\n    var axisPointerModelHelper = __webpack_require__(\"QCrJ\");\n    var axisTrigger = __webpack_require__(\"dtW/\");\n    var zrUtil = __webpack_require__(\"/gxq\");\n\n    __webpack_require__(\"TCXJ\");\n    __webpack_require__(\"56C7\");\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(\"D7EH\");\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n/***/ }),\n\n/***/ \"AjK0\":\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ \"AlhT\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Element = __webpack_require__(\"avYi\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"BNYN\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n\n/***/ \"BO1k\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"fxRn\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"BeCT\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar polyHelper = __webpack_require__(\"No7X\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"BuI2\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(\"ecfp\");\n\n    var ComponentModel = __webpack_require__(\"Y5nL\");\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"BwZ6\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(\"RYbJ\")(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"C1+n\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(\"moDv\");\n\nvar _vector = __webpack_require__(\"C7PF\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"C7PF\":\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n\n/***/ \"CCtz\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(\"yt/B\");\n\nvar color = __webpack_require__(\"DRaW\");\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"D7EH\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(\"0sHC\");\n    var BaseAxisPointer = __webpack_require__(\"Ou7x\");\n    var viewHelper = __webpack_require__(\"zAPJ\");\n    var cartesianAxisHelper = __webpack_require__(\"koEO\");\n    var AxisView = __webpack_require__(\"43ae\");\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n\n/***/ \"DRaW\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(\"zMj2\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n\n/***/ \"DpwM\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(\"YNzw\");\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var get = __webpack_require__(\"vXqC\").makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n\n/***/ \"EJsE\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var formatUtil = __webpack_require__(\"HHfb\");\n    var classUtil = __webpack_require__(\"BNYN\");\n    var modelUtil = __webpack_require__(\"vXqC\");\n    var ComponentModel = __webpack_require__(\"Y5nL\");\n    var colorPaletteMixin = __webpack_require__(\"MyoG\");\n    var env = __webpack_require__(\"YNzw\");\n    var layout = __webpack_require__(\"1Xuh\");\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            // Backward compat: using subType on theme.\n            // But if name duplicate between series subType\n            // (for example: parallel) add component mainType,\n            // add suffix 'Series'.\n            var themeSubType = this.subType;\n            if (ComponentModel.hasClass(themeSubType)) {\n                themeSubType += 'Series';\n            }\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n\n/***/ \"Gw4f\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Gradient = __webpack_require__(\"wRzc\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"GxVO\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(\"9qnA\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar PathProxy = __webpack_require__(\"moDv\");\n\nvar pathContain = __webpack_require__(\"2M5Q\");\n\nvar Pattern = __webpack_require__(\"dZ2L\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"HHfb\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var numberUtil = __webpack_require__(\"wWR3\");\n    var textContain = __webpack_require__(\"3h1/\");\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n\n/***/ \"HKuw\":\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n\n/***/ \"I0Vc\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"g+yZ\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(\"/gxq\");\n\nvar log = __webpack_require__(\"eZxa\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar timsort = __webpack_require__(\"HKuw\");\n\nvar Layer = __webpack_require__(\"OT4p\");\n\nvar requestAnimationFrame = __webpack_require__(\"a1Sp\");\n\nvar Image = __webpack_require__(\"MAom\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ILx8\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(\"UkNE\");\n\n    __webpack_require__(\"D7EH\");\n\n    __webpack_require__(\"AKXb\");\n\n\n\n/***/ }),\n\n/***/ \"Icdr\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(\"YNzw\");\n\n    var GlobalModel = __webpack_require__(\"Rtf0\");\n    var ExtensionAPI = __webpack_require__(\"uJBW\");\n    var CoordinateSystemManager = __webpack_require__(\"rctg\");\n    var OptionManager = __webpack_require__(\"em4M\");\n    var backwardCompat = __webpack_require__(\"8V5i\");\n\n    var ComponentModel = __webpack_require__(\"Y5nL\");\n    var SeriesModel = __webpack_require__(\"EJsE\");\n\n    var ComponentView = __webpack_require__(\"Pgdp\");\n    var ChartView = __webpack_require__(\"Ylhr\");\n    var graphic = __webpack_require__(\"0sHC\");\n    var modelUtil = __webpack_require__(\"vXqC\");\n    var throttle = __webpack_require__(\"QD+P\");\n\n    var zrender = __webpack_require__(\"zEoQ\");\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var colorTool = __webpack_require__(\"DRaW\");\n    var Eventful = __webpack_require__(\"qjvV\");\n    var timsort = __webpack_require__(\"HKuw\");\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        var theme = zrUtil.clone(theme);\n        theme && backwardCompat(theme, true);\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = theme;\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.1',\n        dependencies: {\n            zrender: '3.6.1'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(\"n5nI\"));\n    echarts.registerPreprocessor(backwardCompat);\n    echarts.registerLoading('default', __webpack_require__(\"OkSz\"));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(\"Rfu2\");\n    echarts.Model = __webpack_require__(\"Pdtn\");\n\n    echarts.Axis = __webpack_require__(\"2HcM\");\n\n    echarts.graphic = __webpack_require__(\"0sHC\");\n    echarts.number = __webpack_require__(\"wWR3\");\n    echarts.format = __webpack_require__(\"HHfb\");\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(\"dOVI\");\n    echarts.vector = __webpack_require__(\"C7PF\");\n    echarts.color = __webpack_require__(\"DRaW\");\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(\"5QRV\");\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"DuR2\")))\n\n/***/ }),\n\n/***/ \"JMnz\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(\"UAiw\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"K0T9\":\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"KsMi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"LICT\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(\"AAi1\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ \"MAom\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(\"9qnA\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar imageHelper = __webpack_require__(\"+Y0c\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"MXTC\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(\"GxVO\");\n    var vec2 = __webpack_require__(\"C7PF\");\n    var fixClipWithShadow = __webpack_require__(\"dnLe\");\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n\n/***/ \"MyoG\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(\"BNYN\");\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"NZsM\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(\"3h1/\");\n    var graphicUtil = __webpack_require__(\"0sHC\");\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [isEmphasis]\n         * @return {string}\n         */\n        getTextColor: function (isEmphasis) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!isEmphasis && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"No7X\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(\"2XvD\");\n\nvar smoothBezier = __webpack_require__(\"b8C2\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ \"OT4p\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(\"/gxq\");\n\nvar _config = __webpack_require__(\"g+yZ\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(\"d8Tt\");\n\nvar Pattern = __webpack_require__(\"dZ2L\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Of86\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"OkSz\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(\"0sHC\");\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n\n/***/ \"Oq2I\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(\"AKXb\");\n\n    __webpack_require__(\"7XrG\");\n\n    __webpack_require__(\"XAC3\");\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(\"Icdr\").registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(\"Icdr\").registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n\n/***/ \"Ou7x\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var clazzUtil = __webpack_require__(\"BNYN\");\n    var graphic = __webpack_require__(\"0sHC\");\n    var get = __webpack_require__(\"vXqC\").makeGetter();\n    var axisPointerModelHelper = __webpack_require__(\"QCrJ\");\n    var eventTool = __webpack_require__(\"UAiw\");\n    var throttle = __webpack_require__(\"QD+P\");\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n\n/***/ \"OxCu\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var modelUtil = __webpack_require__(\"vXqC\");\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n\n/***/ \"PD67\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar roundRectHelper = __webpack_require__(\"Sm9T\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"PWa9\":\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n\n/***/ \"Pdtn\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var clazzUtil = __webpack_require__(\"BNYN\");\n    var env = __webpack_require__(\"YNzw\");\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(\"BwZ6\"));\n    mixin(Model, __webpack_require__(\"fgF4\"));\n    mixin(Model, __webpack_require__(\"NZsM\"));\n    mixin(Model, __webpack_require__(\"e95b\"));\n\n    module.exports = Model;\n\n\n/***/ }),\n\n/***/ \"Pgdp\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(\"AlhT\");\n    var componentUtil = __webpack_require__(\"h0jU\");\n    var clazzUtil = __webpack_require__(\"BNYN\");\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n\n/***/ \"Pmfi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(\"VewU\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar ZImage = __webpack_require__(\"MAom\");\n\nvar ZText = __webpack_require__(\"/86O\");\n\nvar _graphic = __webpack_require__(\"4w1v\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(svgRoot, tagNames, markLabel) {\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element._dom && defs.contains(element._dom)) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element._dom = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n  defs.removeChild(element._dom);\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Q5xN\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(\"VewU\");\n\nvar createElement = _core.createElement;\n\nvar util = __webpack_require__(\"/gxq\");\n\nvar each = util.each;\n\nvar zrLog = __webpack_require__(\"eZxa\");\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar ZImage = __webpack_require__(\"MAom\");\n\nvar ZText = __webpack_require__(\"/86O\");\n\nvar arrayDiff = __webpack_require__(\"0fQF\");\n\nvar GradientManager = __webpack_require__(\"hZf2\");\n\nvar ClippathManager = __webpack_require__(\"TDz/\");\n\nvar _graphic = __webpack_require__(\"4w1v\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style['user-select'] = 'none';\n  svgRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(svgRoot);\n  this.clipPathManager = new ClippathManager(svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width && this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToSvg: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:img/svg+xml;utf-8,' + unescape(html);\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"QCrJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var Model = __webpack_require__(\"Pdtn\");\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ \"QD+P\":\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n\n/***/ \"QxFU\":\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n\n/***/ \"RKzr\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var Axis = __webpack_require__(\"2HcM\");\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n\n/***/ \"RQuk\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  __webpack_require__(\"u8/3\")\n}\nvar Component = __webpack_require__(\"VU/8\")(\n  /* script */\n  __webpack_require__(\"p954\"),\n  /* template */\n  __webpack_require__(\"9meg\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\nComponent.options.__file = \"E:\\\\gitee\\\\adminPage\\\\src\\\\views\\\\sign\\\\index.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== \"default\" && key.substr(0, 2) !== \"__\"})) {console.error(\"named exports are not supported in *.vue files.\")}\nif (Component.options.functional) {console.error(\"[vue-loader] index.vue: functional components are not supported with templates, they should use render functions.\")}\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-577d32ea\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-577d32ea\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ \"RYbJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n\n/***/ \"Rfu2\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(\"Pdtn\");\n    var DataDiffer = __webpack_require__(\"1Hui\");\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var modelUtil = __webpack_require__(\"vXqC\");\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"DuR2\")))\n\n/***/ }),\n\n/***/ \"RiVu\":\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"RjA7\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var modelUtil = __webpack_require__(\"vXqC\");\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ \"Rtf0\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var modelUtil = __webpack_require__(\"vXqC\");\n    var Model = __webpack_require__(\"Pdtn\");\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(\"Y5nL\");\n\n    var globalDefault = __webpack_require__(\"u820\");\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(\"MyoG\"));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n\n/***/ \"SlE6\":\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n\n/***/ \"Sm9T\":\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ \"TCXJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(\"Icdr\");\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n\n/***/ \"TDz/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Definable = __webpack_require__(\"Pmfi\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar matrix = __webpack_require__(\"dOVI\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(svgRoot) {\n  Definable.call(this, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"TIfeS\":\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"UAiw\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(\"qjvV\");\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(\"YNzw\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n\n/***/ \"UkNE\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(\"0sHC\");\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var echarts = __webpack_require__(\"Icdr\");\n\n    __webpack_require__(\"5vFd\");\n\n    __webpack_require__(\"zz1u\");\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"V4nf\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(\"/gxq\");\n\nvar _event = __webpack_require__(\"UAiw\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(\"a1Sp\");\n\nvar Animator = __webpack_require__(\"CCtz\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Vc3t\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = add;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getRangeTongjiList;\n/* unused harmony export getSingleTongji */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_fetch1__ = __webpack_require__(\"k97f\");\n\nvar qs = __webpack_require__(\"mw3O\");\n\nfunction add(params) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_fetch1__[\"a\" /* default */])({\n    url: '/api/sign/add',\n    method: 'post',\n    data: qs.stringify(params),\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  });\n}\n\nfunction getRangeTongjiList(params) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_fetch1__[\"a\" /* default */])({\n    url: '/api/sign/getRangeTongjiList',\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    data: qs.stringify(params)\n  });\n}\n\nfunction getSingleTongji(params) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_fetch1__[\"a\" /* default */])({\n    url: '/api/sign/getSingleTongji',\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    data: qs.stringify(params)\n  });\n}\n\n/***/ }),\n\n/***/ \"VewU\":\n/***/ (function(module, exports) {\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;\n\n/***/ }),\n\n/***/ \"VmZa\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"6MCj\");\n\nvar _zrender = __webpack_require__(\"hv2j\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = __webpack_require__(\"0jKn\");\n\nregisterPainter('vml', Painter);\n\n/***/ }),\n\n/***/ \"W3Iv\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"wEtr\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"Wmy2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\n/**\n * 正多边形\n * @module zrender/shape/Isogon\n */\nvar PI = Math.PI;\nvar sin = Math.sin;\nvar cos = Math.cos;\n\nvar _default = Path.extend({\n  type: 'isogon',\n  shape: {\n    x: 0,\n    y: 0,\n    r: 0,\n    n: 0\n  },\n  buildPath: function (ctx, shape) {\n    var n = shape.n;\n\n    if (!n || n < 2) {\n      return;\n    }\n\n    var x = shape.x;\n    var y = shape.y;\n    var r = shape.r;\n    var dStep = 2 * PI / n;\n    var deg = -PI / 2;\n    ctx.moveTo(x + r * cos(deg), y + r * sin(deg));\n\n    for (var i = 0, end = n - 1; i < end; i++) {\n      deg += dStep;\n      ctx.lineTo(x + r * cos(deg), y + r * sin(deg));\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"XAC3\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(\"aYad\");\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var formatUtil = __webpack_require__(\"HHfb\");\n    var numberUtil = __webpack_require__(\"wWR3\");\n    var graphic = __webpack_require__(\"0sHC\");\n    var findPointFromSeries = __webpack_require__(\"OxCu\");\n    var layoutUtil = __webpack_require__(\"1Xuh\");\n    var env = __webpack_require__(\"YNzw\");\n    var Model = __webpack_require__(\"Pdtn\");\n    var globalListener = __webpack_require__(\"DpwM\");\n    var axisHelper = __webpack_require__(\"3yJd\");\n    var axisPointerViewHelper = __webpack_require__(\"zAPJ\");\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(\"Icdr\").extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n/***/ }),\n\n/***/ \"Xd32\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"+tPU\");\n__webpack_require__(\"zQR9\");\nmodule.exports = __webpack_require__(\"5PlU\");\n\n\n/***/ }),\n\n/***/ \"Y5nL\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(\"Pdtn\");\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(\"h0jU\");\n    var clazzUtil = __webpack_require__(\"BNYN\");\n    var layout = __webpack_require__(\"1Xuh\");\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(\"wEU0\"));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n\n/***/ \"YNzw\":\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"Ylhr\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(\"AlhT\");\n    var componentUtil = __webpack_require__(\"h0jU\");\n    var clazzUtil = __webpack_require__(\"BNYN\");\n    var modelUtil = __webpack_require__(\"vXqC\");\n    var zrUtil = __webpack_require__(\"/gxq\");\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n\n/***/ \"a1Sp\":\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"aYad\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var zrColor = __webpack_require__(\"DRaW\");\n    var eventUtil = __webpack_require__(\"UAiw\");\n    var formatUtil = __webpack_require__(\"HHfb\");\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(\"YNzw\");\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n\n/***/ \"ao1T\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(\"Rfu2\");\n    var completeDimensions = __webpack_require__(\"/n1K\");\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var modelUtil = __webpack_require__(\"vXqC\");\n    var CoordinateSystem = __webpack_require__(\"rctg\");\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n\n/***/ \"avYi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(\"RiVu\");\n\nvar Eventful = __webpack_require__(\"qjvV\");\n\nvar Transformable = __webpack_require__(\"/ZBO\");\n\nvar Animatable = __webpack_require__(\"42YS\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"b8C2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(\"C7PF\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"cI6i\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;\n\n/***/ }),\n\n/***/ \"cO/Q\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var SymbolDraw = __webpack_require__(\"dZZy\");\n    var Symbol = __webpack_require__(\"1bHA\");\n    var lineAnimationDiff = __webpack_require__(\"SlE6\");\n    var graphic = __webpack_require__(\"0sHC\");\n    var modelUtil = __webpack_require__(\"vXqC\");\n    var polyHelper = __webpack_require__(\"MXTC\");\n    var ChartView = __webpack_require__(\"Ylhr\");\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"ct4P\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n\n/***/ \"d7EF\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _isIterable2 = __webpack_require__(\"us/S\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = __webpack_require__(\"BO1k\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/***/ }),\n\n/***/ \"d8Tt\":\n/***/ (function(module, exports) {\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"dDRy\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var numberUtil = __webpack_require__(\"wWR3\");\n    var formatUtil = __webpack_require__(\"HHfb\");\n    var scaleHelper = __webpack_require__(\"wW3A\");\n\n    var IntervalScale = __webpack_require__(\"tBuv\");\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n\n/***/ \"dE09\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar PathProxy = __webpack_require__(\"moDv\");\n\nvar transformPath = __webpack_require__(\"C1+n\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n\n/***/ \"dOVI\":\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n/***/ }),\n\n/***/ \"dZ2L\":\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"dZZy\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(\"0sHC\");\n    var Symbol = __webpack_require__(\"1bHA\");\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n\n/***/ \"dnLe\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(\"YNzw\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"dtW/\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var modelUtil = __webpack_require__(\"vXqC\");\n    var modelHelper = __webpack_require__(\"QCrJ\");\n    var findPointFromSeries = __webpack_require__(\"OxCu\");\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n\n/***/ \"e8/X\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(\"UAiw\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Eventful = __webpack_require__(\"qjvV\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar GestureMgr = __webpack_require__(\"JMnz\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"e95b\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(\"RYbJ\")(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"eH0a\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(\"s/lY\");\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var ComponentModel = __webpack_require__(\"Y5nL\");\n    var layout = __webpack_require__(\"1Xuh\");\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n\n/***/ \"eZxa\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(\"g+yZ\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"ecfp\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(\"Y5nL\");\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var axisModelCreator = __webpack_require__(\"eH0a\");\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(\"2uoh\"));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n\n/***/ \"em4M\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var modelUtil = __webpack_require__(\"vXqC\");\n    var ComponentModel = __webpack_require__(\"Y5nL\");\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n\n/***/ \"fNhY\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nexports.util = zrUtil;\n\nvar matrix = __webpack_require__(\"dOVI\");\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(\"C7PF\");\n\nexports.vector = vector;\n\nvar colorTool = __webpack_require__(\"DRaW\");\n\nexports.color = colorTool;\n\nvar pathTool = __webpack_require__(\"dE09\");\n\nexports.path = pathTool;\n\nvar _Group = __webpack_require__(\"AlhT\");\n\nexports.Group = _Group;\n\nvar _Path = __webpack_require__(\"GxVO\");\n\nexports.Path = _Path;\n\nvar _Image = __webpack_require__(\"MAom\");\n\nexports.Image = _Image;\n\nvar _CompoundPath = __webpack_require__(\"me52\");\n\nexports.CompoundPath = _CompoundPath;\n\nvar _Text = __webpack_require__(\"/86O\");\n\nexports.Text = _Text;\n\nvar _Arc = __webpack_require__(\"46eW\");\n\nexports.Arc = _Arc;\n\nvar _BezierCurve = __webpack_require__(\"67nf\");\n\nexports.BezierCurve = _BezierCurve;\n\nvar _Circle = __webpack_require__(\"Of86\");\n\nexports.Circle = _Circle;\n\nvar _Droplet = __webpack_require__(\"wsnU\");\n\nexports.Droplet = _Droplet;\n\nvar _Ellipse = __webpack_require__(\"udrn\");\n\nexports.Ellipse = _Ellipse;\n\nvar _Heart = __webpack_require__(\"fli2\");\n\nexports.Heart = _Heart;\n\nvar _Isogon = __webpack_require__(\"Wmy2\");\n\nexports.Isogon = _Isogon;\n\nvar _Line = __webpack_require__(\"KsMi\");\n\nexports.Line = _Line;\n\nvar _Polygon = __webpack_require__(\"+UTs\");\n\nexports.Polygon = _Polygon;\n\nvar _Polyline = __webpack_require__(\"BeCT\");\n\nexports.Polyline = _Polyline;\n\nvar _Rect = __webpack_require__(\"PD67\");\n\nexports.Rect = _Rect;\n\nvar _Ring = __webpack_require__(\"6Kqb\");\n\nexports.Ring = _Ring;\n\nvar _Rose = __webpack_require__(\"ynWU\");\n\nexports.Rose = _Rose;\n\nvar _Sector = __webpack_require__(\"sRta\");\n\nexports.Sector = _Sector;\n\nvar _Star = __webpack_require__(\"sGy6\");\n\nexports.Star = _Star;\n\nvar _Trochoid = __webpack_require__(\"qg9n\");\n\nexports.Trochoid = _Trochoid;\n\nvar _LinearGradient = __webpack_require__(\"Gw4f\");\n\nexports.LinearGradient = _LinearGradient;\n\nvar _RadialGradient = __webpack_require__(\"jHiU\");\n\nexports.RadialGradient = _RadialGradient;\n\nvar _Pattern = __webpack_require__(\"dZ2L\");\n\nexports.Pattern = _Pattern;\n\nvar _BoundingRect = __webpack_require__(\"8b51\");\n\nexports.BoundingRect = _BoundingRect;\n\n/***/ }),\n\n/***/ \"fgF4\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(\"RYbJ\")(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n\n/***/ \"fli2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\n/**\n * 心形\n * @module zrender/graphic/shape/Heart\n */\nvar _default = Path.extend({\n  type: 'heart',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.width;\n    var b = shape.height;\n    ctx.moveTo(x, y);\n    ctx.bezierCurveTo(x + a / 2, y - b * 2 / 3, x + a * 2, y + b / 3, x, y + b);\n    ctx.bezierCurveTo(x - a * 2, y + b / 3, x - a / 2, y - b * 2 / 3, x, y);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"fxRn\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"+tPU\");\n__webpack_require__(\"zQR9\");\nmodule.exports = __webpack_require__(\"g8Ux\");\n\n\n/***/ }),\n\n/***/ \"g+yZ\":\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n\n/***/ \"g8Ux\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(\"77Pl\");\nvar get = __webpack_require__(\"3fs2\");\nmodule.exports = __webpack_require__(\"FeBl\").getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n/***/ }),\n\n/***/ \"gSvA\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://github.com/tc39/proposal-object-values-entries\nvar $export = __webpack_require__(\"kM2E\");\nvar $entries = __webpack_require__(\"mbce\")(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n\n\n/***/ }),\n\n/***/ \"h0jU\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var clazz = __webpack_require__(\"BNYN\");\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n\n/***/ \"hZf2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Definable = __webpack_require__(\"Pmfi\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar zrLog = __webpack_require__(\"eZxa\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(svgRoot) {\n  Definable.call(this, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"hv2j\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(\"RiVu\");\n\nvar env = __webpack_require__(\"YNzw\");\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Handler = __webpack_require__(\"lj6Z\");\n\nvar Storage = __webpack_require__(\"9N6q\");\n\nvar Painter = __webpack_require__(\"I0Vc\");\n\nvar Animation = __webpack_require__(\"V4nf\");\n\nvar HandlerProxy = __webpack_require__(\"e8/X\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n\n/***/ \"jHiU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(\"/gxq\");\n\nvar Gradient = __webpack_require__(\"wRzc\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"jLnL\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"4w1v\");\n\nvar _zrender = __webpack_require__(\"hv2j\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = __webpack_require__(\"Q5xN\");\n\nregisterPainter('svg', Painter);\n\n/***/ }),\n\n/***/ \"jMTz\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(\"ao1T\");\n    var SeriesModel = __webpack_require__(\"EJsE\");\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n\n/***/ \"kK7q\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(\"0sHC\");\n    var BoundingRect = __webpack_require__(\"8b51\");\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n\n/***/ \"koEO\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ \"le/s\":\n/***/ (function(module, exports) {\n\nvar requestFrame = (function () {\n  var window = this\n  var raf = window.requestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    function fallbackRAF(func) {\n      return window.setTimeout(func, 20)\n    }\n  return function requestFrameFunction(func) {\n    return raf(func)\n  }\n})()\n\nvar cancelFrame = (function () {\n  var window = this\n  var cancel = window.cancelAnimationFrame ||\n    window.mozCancelAnimationFrame ||\n    window.webkitCancelAnimationFrame ||\n    window.clearTimeout\n  return function cancelFrameFunction(id) {\n    return cancel(id)\n  }\n})()\n\nfunction resizeListener(e) {\n  var win = e.target || e.srcElement\n  if (win.__resizeRAF__) {\n    cancelFrame(win.__resizeRAF__)\n  }\n  win.__resizeRAF__ = requestFrame(function () {\n    var trigger = win.__resizeTrigger__\n    trigger.__resizeListeners__.forEach(function (fn) {\n      fn.call(trigger, e)\n    })\n  })\n}\n\nvar exports = function exports(element, fn) {\n  var window = this\n  var document = window.document\n  var isIE\n\n  var attachEvent = document.attachEvent\n  if (typeof navigator !== 'undefined') {\n    isIE = navigator.userAgent.match(/Trident/) ||\n      navigator.userAgent.match(/Edge/)\n  }\n\n  function objectLoad() {\n    this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__\n    this.contentDocument.defaultView.addEventListener('resize', resizeListener)\n  }\n\n  if (!element.__resizeListeners__) {\n    element.__resizeListeners__ = []\n    if (attachEvent) {\n      element.__resizeTrigger__ = element\n      element.attachEvent('onresize', resizeListener)\n    } else {\n      if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative'\n      }\n      var obj = (element.__resizeTrigger__ = document.createElement('object'))\n      obj.setAttribute(\n        'style',\n        'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1; opacity: 0;'\n      )\n      obj.setAttribute('class', 'resize-sensor')\n      obj.__resizeElement__ = element\n      obj.onload = objectLoad\n      obj.type = 'text/html'\n      if (isIE) {\n        element.appendChild(obj)\n      }\n      obj.data = 'about:blank'\n      if (!isIE) {\n        element.appendChild(obj)\n      }\n    }\n  }\n  element.__resizeListeners__.push(fn)\n}\n\nmodule.exports = typeof window === 'undefined' ? exports : exports.bind(window)\n\nmodule.exports.unbind = function (element, fn) {\n  var attachEvent = document.attachEvent\n  if (fn) {\n    element.__resizeListeners__.splice(\n      element.__resizeListeners__.indexOf(fn),\n      1\n    )\n  } else {\n    element.__resizeListeners__ = []\n  }\n  if (!element.__resizeListeners__.length) {\n    if (attachEvent) {\n      element.detachEvent('onresize', resizeListener)\n    } else {\n      element.__resizeTrigger__.contentDocument.defaultView.removeEventListener(\n        'resize',\n        resizeListener\n      )\n      delete element.__resizeTrigger__.contentDocument.defaultView.__resizeTrigger__\n      element.__resizeTrigger__ = !element.removeChild(\n        element.__resizeTrigger__\n      )\n    }\n    delete element.__resizeListeners__\n  }\n}\n\n\n/***/ }),\n\n/***/ \"lj6Z\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(\"/gxq\");\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar Draggable = __webpack_require__(\"TIfeS\");\n\nvar Eventful = __webpack_require__(\"qjvV\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"mbce\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar getKeys = __webpack_require__(\"lktj\");\nvar toIObject = __webpack_require__(\"TcQ7\");\nvar isEnum = __webpack_require__(\"NpIQ\").f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n\n\n/***/ }),\n\n/***/ \"me52\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"moDv\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(\"AAi1\");\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar bbox = __webpack_require__(\"wUOi\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\nvar _config = __webpack_require__(\"g+yZ\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"n5nI\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(\"wRzc\");\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n\n/***/ \"oBGI\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(\"AAi1\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ \"ofHq\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.sign .search-member-form {\\n  text-align: center;\\n}\\n.sign .search-member-form > div {\\n  text-align: left;\\n}\\n.sign .read-card .svg-icon {\\n  font-size: 20px;\\n}\\n.sign .info-item {\\n  font-size: 14px;\\n  padding: 10px 0;\\n  line-height: 20px;\\n}\\n.sign .info-item label {\\n  color: #97a8be;\\n  font-size: 14px;\\n}\\n.sign .user-photo {\\n  text-align: center;\\n  font-size: 14px;\\n}\\n.sign .user-photo img {\\n  max-width: 100%;\\n  max-height: 300px;\\n  box-shadow: 0 0 1px 1px rgba(0, 0, 0, 0.1);\\n}\\n.sign .card_type {\\n  width: 100%;\\n}\\n.sign .card_type .el-radio {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  padding: 11px 0;\\n}\\n.sign .card_type .el-radio + .el-radio {\\n  margin-left: 0;\\n}\\n.sign .card_type .el-radio__label {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -ms-flex-wrap: wrap;\\n      flex-wrap: wrap;\\n  width: 80%;\\n}\\n.sign .card_type .el-radio__label > div {\\n  padding: 0 5px 10px 5px;\\n}\\n.sign .sign-tongji .select_store {\\n  padding-left: 10px;\\n  margin-bottom: 10px;\\n}\\n.sign .sign-tongji .today-tongji-wrap {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n}\\n.sign .sign-tongji .today-tongji {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  text-align: center;\\n  color: #3c3c3c;\\n}\\n.sign .sign-tongji .today-tongji .today-tongji-title {\\n    font-size: 20px;\\n}\\n.sign .sign-tongji .today-tongji .today-tongji-count {\\n    font-size: 60px;\\n    line-height: 80px;\\n}\\n.sign .sign-tongji .today-tongji .other {\\n    color: #a8a8a8;\\n    font-size: 14px;\\n    line-height: 20px;\\n}\\n.sign .sign-tongji .el-card {\\n  margin: 10px 0;\\n  height: 300px;\\n}\\n.sign .sign-tongji .my-chart-wrap .el-card__body {\\n  padding: 0;\\n}\\n.sign .sign-tongji .count-range {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  padding: 0 15px;\\n  height: 70px;\\n}\\n.sign .sign-tongji .count-range .el-date-editor {\\n    margin: 10px;\\n}\\n.sign .sign-tongji .myChart {\\n  height: 230px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"p954\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__ = __webpack_require__(\"BO1k\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_slicedToArray__ = __webpack_require__(\"d7EF\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_slicedToArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_slicedToArray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_entries__ = __webpack_require__(\"W3Iv\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_entries___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_entries__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_extends__ = __webpack_require__(\"Dd8w\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__ = __webpack_require__(\"pFYg\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__api_member__ = __webpack_require__(\"ocgh\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_vuex__ = __webpack_require__(\"NYxO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__utils__ = __webpack_require__(\"0xDb\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__api_sign__ = __webpack_require__(\"Vc3t\");\n\n\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n// 引入基本模板\nvar echarts = __webpack_require__(\"Icdr\");\n// 引入柱状图组件\n__webpack_require__(\"4UDB\");\n// 引入提示框和title组件\n__webpack_require__(\"Oq2I\");\n__webpack_require__(\"ILx8\");\n\nvar elementResizeEvent = __webpack_require__(\"le/s\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    data: function data() {\n        // 验证不为空\n        var validateEmpty = function validateEmpty(rule, value, callback) {\n            if ((typeof value === 'undefined' ? 'undefined' : __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_typeof___default()(value)) !== 'object' ? !value : !value.length) {\n                return callback(new Error(rule.errMsg));\n            }\n            callback();\n        };\n        return {\n            activeName: 'first',\n            mobile: '',\n            card_id: '',\n            memberInfo: {},\n            isFinded: false,\n            form: {\n                store_id: '',\n                mobile: ''\n            },\n            formRules: {\n                store_id: [{ validator: validateEmpty, errMsg: '请选择门店', trigger: 'change' }],\n                mobile: [{ validator: validateEmpty, errMsg: '请选择卡片', trigger: 'change' }]\n            },\n            store_type: '',\n            stores: [{\n                value: '0',\n                label: '全部场馆'\n            }, {\n                value: '1',\n                label: '英威尔海德店'\n            }, {\n                value: '2',\n                label: '英威尔龙珠店'\n            }],\n            todayTongjiCount: {\n                today: 0,\n                lastDay: 0,\n                thisWeek: 0,\n                thisMonth: 0\n            },\n            myChart: null,\n            echat: {\n                width: '',\n                height: ''\n            },\n            echatData: {\n                keys: [\"08-16\", \"08-17\", \"08-18\", \"08-19\", \"08-20\", \"08-21\", \"08-22\", \"08-23\", \"08-24\", \"08-25\", \"08-26\", \"08-27\", \"08-28\", \"08-29\", \"08-30\", \"08-31\", \"09-01\", \"09-02\", \"09-03\", \"09-04\", \"09-05\", \"09-06\", \"09-07\", \"09-08\", \"09-09\", \"09-10\", \"09-11\", \"09-12\", \"09-13\", \"09-14\"],\n                values: [0, 0, 4, 1, 1, 1, 1, 1, 0, 0, 3, 7, 11, 4, 2, 4, 0, 2, 1, 0, 3, 3, 0, 1, 1, 0, 4, 0, 1, 0]\n            },\n            // 优化echat resize性能，使用定时器的方式\n            timerId: null,\n            countRange: '近30天',\n            countRangeByPicker: ''\n        };\n    },\n\n    computed: __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_vuex__[\"b\" /* mapGetters */])(['isCanReadCard', 'cardID']), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_vuex__[\"c\" /* mapState */])(['winsize']), {\n        labelPosition: function labelPosition() {\n            return this.winsize === 'xs' ? 'top' : 'right';\n        },\n        signCountReq: function signCountReq() {\n            console.log('-aaa-', this.countRange);\n            switch (this.countRange) {\n                case '近30天':\n                    return this.setSignCountReq(30);\n                    break;\n                case '近15天':\n                    return this.setSignCountReq(15);\n                    break;\n                case '近7天':\n                    return this.setSignCountReq(7);\n                    break;\n                default:\n                    if (this.countRangeByPicker[0]) {\n                        return {\n                            store_id: this.store_type,\n                            start_time: Math.round(this.countRangeByPicker[0].getTime() / 1000),\n                            end_time: Math.round(this.countRangeByPicker[1].getTime() / 1000)\n                        };\n                    } else {\n                        return this.setSignCountReq(30);\n                    }\n                    break;\n            }\n        },\n        echatOption: function echatOption() {\n            return {\n                tooltip: {\n                    trigger: 'axis'\n                },\n                grid: {\n                    top: '20',\n                    right: '20',\n                    bottom: '20',\n                    left: '20',\n                    containLabel: true\n                },\n                xAxis: {\n                    data: this.echatData.keys\n                },\n                yAxis: {},\n                series: [{\n                    name: '签到',\n                    type: 'line',\n                    smooth: true,\n                    data: this.echatData.values\n                }]\n            };\n        }\n    }),\n    methods: __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_vuex__[\"d\" /* mapActions */])(['actionReadCard']), {\n        clearCardID: function clearCardID() {\n            this.card_id = '';\n        },\n        readCard: function readCard() {\n            if (this.isCanReadCard) {\n                this.actionReadCard();\n                this.card_id = this.cardID;\n                console.log('读卡', this.card_id, this.cardID);\n            }\n        },\n        handleClick: function handleClick(tab, event) {\n            console.log(tab, event);\n            if (tab.label === '签到记录') {\n                this.myChart.resize();\n            }\n        },\n        handleIconClick: function handleIconClick(ev) {\n            var _this2 = this;\n\n            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__api_member__[\"a\" /* memberInfo */])({ mobile: this.mobile }).then(function (response) {\n                _this2.memberInfo = response.data;\n                _this2.isFinded = true;\n            });\n        },\n        submitForm: function submitForm(formName) {\n            var _this3 = this;\n\n            this.$refs[formName].validate(function (valid) {\n                if (valid) {\n                    _this3.onSubmit();\n                } else {\n                    _this3.$message.error('提交失败，请检查表单！');\n                    return false;\n                }\n            });\n        },\n        onSubmit: function onSubmit() {\n            var _this4 = this;\n\n            var params = {\n                store_id: this.form.store_id,\n                card_id: this.form.card_id,\n                mobile: this.memberInfo.mobile\n            };\n            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__api_sign__[\"a\" /* add */])(params).then(function (response) {\n                _this4.$message.success('签到成功');\n            });\n        },\n        formatDateTime: function formatDateTime(time) {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__utils__[\"a\" /* formatDateTime */])(time);\n        },\n        cardEndTime: function cardEndTime(time) {\n            var now = Math.round(new Date().getTime() / 1000);\n            return time ? Math.round((time - now) / (60 * 60 * 24)) : '';\n        },\n\n        // 设置今日统计\n        setTodayTongjiCount: function setTodayTongjiCount() {\n            var _this5 = this;\n\n            var now = new Date(),\n                year = now.getFullYear(),\n                month = now.getMonth(),\n                day = now.getDate(),\n                last = new Date(year, month - 1, day),\n                params = {\n                store_id: this.store_type,\n                start_time: Math.round(last.getTime() / 1000),\n                end_time: Math.round(now.getTime() / 1000)\n            };\n            var today = void 0,\n                lastDay = void 0,\n                thisWeek = 0,\n                thisMonth = 0;\n            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__api_sign__[\"b\" /* getRangeTongjiList */])(params).then(function (response) {\n                var data = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_entries___default()(response.data);\n                var i = 0;\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(data), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var _ref = _step.value;\n\n                        var _ref2 = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_slicedToArray___default()(_ref, 2);\n\n                        var key = _ref2[0];\n                        var value = _ref2[1];\n\n                        if (i > data.length - 8) {\n                            console.log('哈哈');\n                            thisWeek += 1 * value;\n                        }\n                        thisMonth += 1 * value;\n                        if (i === data.length - 2) {\n                            lastDay = value;\n                        }\n                        if (i === data.length - 1) {\n                            today = value;\n                        }\n                        i++;\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                console.log(data, {\n                    today: today,\n                    lastDay: lastDay,\n                    thisWeek: thisWeek,\n                    thisMonth: thisMonth\n                });\n\n                _this5.todayTongjiCount = {\n                    today: today,\n                    lastDay: lastDay,\n                    thisWeek: thisWeek,\n                    thisMonth: thisMonth\n                };\n            });\n        },\n\n        // 获取签到统计\n        getSignCount: function getSignCount() {\n            var _this6 = this;\n\n            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__api_sign__[\"b\" /* getRangeTongjiList */])(this.signCountReq).then(function (response) {\n                var i = 0;\n                _this6.echatData.keys = [];\n                _this6.echatData.values = [];\n                var _iteratorNormalCompletion2 = true;\n                var _didIteratorError2 = false;\n                var _iteratorError2 = undefined;\n\n                try {\n                    for (var _iterator2 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_entries___default()(response.data)), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                        var _ref3 = _step2.value;\n\n                        var _ref4 = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_slicedToArray___default()(_ref3, 2);\n\n                        var key = _ref4[0];\n                        var value = _ref4[1];\n\n                        _this6.echatData.keys[i] = key;\n                        _this6.echatData.values[i] = value;\n                        i++;\n                    }\n                } catch (err) {\n                    _didIteratorError2 = true;\n                    _iteratorError2 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                            _iterator2.return();\n                        }\n                    } finally {\n                        if (_didIteratorError2) {\n                            throw _iteratorError2;\n                        }\n                    }\n                }\n\n                _this6.drawLine();\n            });\n        },\n        drawLine: function drawLine() {\n            // 绘制图表\n            this.myChart.setOption(this.echatOption, true);\n        },\n        setEchatWH: function setEchatWH() {\n            var $myChartElm = document.querySelector('.myChart');\n            if (!$myChartElm) {\n                return;\n            }\n            var $myChart = window.getComputedStyle($myChartElm, null);\n            var $myChartWrap = window.getComputedStyle(document.querySelector('.my-chart-wrap'), null);\n            // 判断是不是百分比\n            var isBaifenbi = /%/.test($myChartWrap.width);\n            var width = isBaifenbi ? document.querySelector('.el-tabs').offsetWidth * ($myChartWrap.width.replace('%', '') / 100) - 2 * $myChartWrap.paddingLeft.replace('px', '') : $myChartWrap.width.replace('px', '') - 2 * $myChartWrap.paddingLeft.replace('px', '');\n            this.echat.width = width;\n            this.echat.height = 1 * $myChart.height.replace('px', '');\n            console.log(this.echat, isBaifenbi, width);\n        },\n        setSignCountReq: function setSignCountReq(days) {\n            var now = new Date();\n            return {\n                store_id: this.store_type,\n                start_time: Math.round((now.getTime() - 1000 * 60 * 60 * 24 * days) / 1000),\n                end_time: Math.round(now.getTime() / 1000)\n            };\n        }\n    }),\n    watch: {\n        signCountReq: function signCountReq() {\n            console.log('=改变=', this.signCountReq);\n            this.getSignCount();\n        },\n        card_id: function card_id() {\n            var _this7 = this;\n\n            if (!this.card_id) {\n                console.log('为空，不请求');\n                return;\n            }\n            // this.card_id = '0002833000';\n            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__api_member__[\"a\" /* memberInfo */])({ card_id: this.card_id }).then(function (response) {\n                _this7.memberInfo = response.data;\n                _this7.isFinded = true;\n            });\n        },\n        store_type: function store_type() {\n            this.signCountReq.store_id = this.store_type;\n            this.setTodayTongjiCount();\n            this.getSignCount();\n        },\n        countRangeByPicker: function countRangeByPicker() {\n            // element-ui@1.4.8中 如果直接使picker的module等于countRange会出错，因为picker不允许接收非允许的数据格式\n            this.countRange = this.countRangeByPicker;\n        }\n    },\n    created: function created() {\n        this.setTodayTongjiCount();\n    },\n    mounted: function mounted() {\n        this.setEchatWH();\n        // 基于准备好的dom，初始化echarts实例\n        this.myChart = echarts.init(document.getElementById('myChart'));\n        this.getSignCount();\n        var element = document.querySelector('.el-tabs');\n        if (!element) {\n            return;\n        }\n        var _this = this;\n        elementResizeEvent(element, function () {\n            console.log(\"resized!\");\n            console.log(element.offsetWidth);\n            _this.setEchatWH();\n\n            // 节流\n            // 清除执行函数的定时器，第一次进入为空\n            clearTimeout(_this.timerId);\n            _this.timerId = setTimeout(function () {\n                _this.myChart.resize();\n            }, 280);\n        });\n    }\n});\n\n/***/ }),\n\n/***/ \"qg9n\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\n/**\n * 内外旋轮曲线\n * @module zrender/graphic/shape/Trochold\n */\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nvar _default = Path.extend({\n  type: 'trochoid',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0,\n    d: 0,\n    location: 'out'\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var R = shape.r;\n    var r = shape.r0;\n    var d = shape.d;\n    var offsetX = shape.cx;\n    var offsetY = shape.cy;\n    var delta = shape.location == 'out' ? 1 : -1;\n\n    if (shape.location && R <= r) {\n      return;\n    }\n\n    var num = 0;\n    var i = 1;\n    var theta;\n    x1 = (R + delta * r) * cos(0) - delta * d * cos(0) + offsetX;\n    y1 = (R + delta * r) * sin(0) - d * sin(0) + offsetY;\n    ctx.moveTo(x1, y1); // 计算结束时的i\n\n    do {\n      num++;\n    } while (r * num % (R + delta * r) !== 0);\n\n    do {\n      theta = Math.PI / 180 * i;\n      x2 = (R + delta * r) * cos(theta) - delta * d * cos((R / r + delta) * theta) + offsetX;\n      y2 = (R + delta * r) * sin(theta) - d * sin((R / r + delta) * theta) + offsetY;\n      ctx.lineTo(x2, y2);\n      i++;\n    } while (i <= r * num / (R + delta * r) * 360);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"qjrH\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(\"/gxq\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(\"3h1/\");\n\nvar roundRectHelper = __webpack_require__(\"Sm9T\");\n\nvar imageHelper = __webpack_require__(\"+Y0c\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n\n/***/ \"qjvV\":\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"rctg\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n\n/***/ \"s/lY\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            onZeroAxisIndex: null,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            fontSize: 12\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n        // maxInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n\n/***/ \"s48c\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var graphic = __webpack_require__(\"0sHC\");\n    var AxisBuilder = __webpack_require__(\"vjPX\");\n    var AxisView = __webpack_require__(\"43ae\");\n    var cartesianAxisHelper = __webpack_require__(\"koEO\");\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n/***/ }),\n\n/***/ \"sGy6\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\n/**\n * n角星（n>3）\n * @module zrender/graphic/shape/Star\n */\nvar PI = Math.PI;\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nvar _default = Path.extend({\n  type: 'star',\n  shape: {\n    cx: 0,\n    cy: 0,\n    n: 3,\n    r0: null,\n    r: 0\n  },\n  buildPath: function (ctx, shape) {\n    var n = shape.n;\n\n    if (!n || n < 2) {\n      return;\n    }\n\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = shape.r;\n    var r0 = shape.r0; // 如果未指定内部顶点外接圆半径，则自动计算\n\n    if (r0 == null) {\n      r0 = n > 4 // 相隔的外部顶点的连线的交点，\n      // 被取为内部交点，以此计算r0\n      ? r * cos(2 * PI / n) / cos(PI / n) // 二三四角星的特殊处理\n      : r / 3;\n    }\n\n    var dStep = PI / n;\n    var deg = -PI / 2;\n    var xStart = x + r * cos(deg);\n    var yStart = y + r * sin(deg);\n    deg += dStep; // 记录边界点，用于判断inside\n\n    ctx.moveTo(xStart, yStart);\n\n    for (var i = 0, end = n * 2 - 1, ri; i < end; i++) {\n      ri = i % 2 === 0 ? r0 : r;\n      ctx.lineTo(x + ri * cos(deg), y + ri * sin(deg));\n      deg += dStep;\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"sRta\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\nvar fixClipWithShadow = __webpack_require__(\"dnLe\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"tBuv\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(\"wWR3\");\n    var formatUtil = __webpack_require__(\"HHfb\");\n    var Scale = __webpack_require__(\"/+sa\");\n    var helper = __webpack_require__(\"wW3A\");\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n\n/***/ \"taS8\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(\"qjrH\");\n\nvar BoundingRect = __webpack_require__(\"8b51\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"u+XU\":\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ \"u5Nq\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var Scale = __webpack_require__(\"/+sa\");\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n\n/***/ \"u8/3\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"ofHq\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"86c66e86\", content, false);\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":false,\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-577d32ea\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":false,\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-577d32ea\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n\n/***/ \"u820\":\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n\n/***/ \"uJBW\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n\n/***/ \"udrn\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\n/**\n * 椭圆形状\n * @module zrender/graphic/shape/Ellipse\n */\nvar _default = Path.extend({\n  type: 'ellipse',\n  shape: {\n    cx: 0,\n    cy: 0,\n    rx: 0,\n    ry: 0\n  },\n  buildPath: function (ctx, shape) {\n    var k = 0.5522848;\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.rx;\n    var b = shape.ry;\n    var ox = a * k; // 水平控制点偏移量\n\n    var oy = b * k; // 垂直控制点偏移量\n    // 从椭圆的左端点开始顺时针绘制四条三次贝塞尔曲线\n\n    ctx.moveTo(x - a, y);\n    ctx.bezierCurveTo(x - a, y - oy, x - ox, y - b, x, y - b);\n    ctx.bezierCurveTo(x + ox, y - b, x + a, y - oy, x + a, y);\n    ctx.bezierCurveTo(x + a, y + oy, x + ox, y + b, x, y + b);\n    ctx.bezierCurveTo(x - ox, y + b, x - a, y + oy, x - a, y);\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"us/S\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"Xd32\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"vXqC\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(\"HHfb\");\n    var nubmerUtil = __webpack_require__(\"wWR3\");\n    var Model = __webpack_require__(\"Pdtn\");\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n\n/***/ \"vjPX\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var formatUtil = __webpack_require__(\"HHfb\");\n    var graphic = __webpack_require__(\"0sHC\");\n    var Model = __webpack_require__(\"Pdtn\");\n    var numberUtil = __webpack_require__(\"wWR3\");\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(\"C7PF\");\n    var matrix = __webpack_require__(\"dOVI\");\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemLabelModel = labelModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemLabelModel = new Model(\n                        categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                    );\n                }\n\n                var textColor = itemLabelModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                graphic.setTextStyle(textEl.style, itemLabelModel, {\n                    text: labels[index],\n                    textAlign: itemLabelModel.getShallow('align', true)\n                        || labelLayout.textAlign,\n                    textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                        || itemLabelModel.getShallow('baseline', true)\n                        || labelLayout.textVerticalAlign,\n                    textFill: typeof textColor === 'function'\n                        ? textColor(\n                            // (1) In category axis with data zoom, tick is not the original\n                            // index of axis.data. So tick should not be exposed to user\n                            // in category axis.\n                            // (2) Compatible with previous version, which always returns labelStr.\n                            // But in interval scale labelStr is like '223,445', which maked\n                            // user repalce ','. So we modify it to return original val but remain\n                            // it as 'string' to avoid error in replacing.\n                            axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                            index\n                        )\n                        : textColor\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n\n/***/ \"wEU0\":\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n\n/***/ \"wEtr\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"gSvA\");\nmodule.exports = __webpack_require__(\"FeBl\").Object.entries;\n\n\n/***/ }),\n\n/***/ \"wRzc\":\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"wUOi\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(\"C7PF\");\n\nvar curve = __webpack_require__(\"AAi1\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n\n/***/ \"wW3A\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(\"wWR3\");\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ \"wWR3\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n\n/***/ \"wsnU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\n/**\n * 水滴形状\n * @module zrender/graphic/shape/Droplet\n */\nvar _default = Path.extend({\n  type: 'droplet',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.width;\n    var b = shape.height;\n    ctx.moveTo(x, y + a);\n    ctx.bezierCurveTo(x + a, y + a, x + a * 3 / 2, y - a / 3, x, y - b);\n    ctx.bezierCurveTo(x - a * 3 / 2, y - a / 3, x - a, y + a, x, y + a);\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"xCbH\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var Scale = __webpack_require__(\"/+sa\");\n    var numberUtil = __webpack_require__(\"wWR3\");\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(\"tBuv\");\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n\n/***/ \"xb/I\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var modelUtil = __webpack_require__(\"vXqC\");\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                    compatLabelTextStyle(mpData[i] && mpData[i].label);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                        compatItemStyle(mlData[i][1]);\n                        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                        compatLabelTextStyle(mlData[i] && mlData[i].label);\n                    }\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option, isTheme) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n        isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n\n        each(\n            axes,\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            if (isObject(geoOpt)) {\n                compatLabelTextStyle(geoOpt.label);\n                each(toArr(geoOpt.regions), function (regionObj) {\n                    compatLabelTextStyle(regionObj.label);\n                });\n            }\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n/***/ }),\n\n/***/ \"ynWU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(\"GxVO\");\n\n/**\n * 玫瑰线\n * @module zrender/graphic/shape/Rose\n */\nvar sin = Math.sin;\nvar cos = Math.cos;\nvar radian = Math.PI / 180;\n\nvar _default = Path.extend({\n  type: 'rose',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: [],\n    k: 0,\n    n: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x;\n    var y;\n    var R = shape.r;\n    var r;\n    var k = shape.k;\n    var n = shape.n;\n    var x0 = shape.cx;\n    var y0 = shape.cy;\n    ctx.moveTo(x0, y0);\n\n    for (var i = 0, len = R.length; i < len; i++) {\n      r = R[i];\n\n      for (var j = 0; j <= 360 * n; j++) {\n        x = r * sin(k / n * j % 360 * radian) * cos(j * radian) + x0;\n        y = r * sin(k / n * j % 360 * radian) * sin(j * radian) + y0;\n        ctx.lineTo(x, y);\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"yt/B\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(\"K0T9\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"zAPJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(\"/gxq\");\n    var graphic = __webpack_require__(\"0sHC\");\n    var textContain = __webpack_require__(\"3h1/\");\n    var formatUtil = __webpack_require__(\"HHfb\");\n    var matrix = __webpack_require__(\"dOVI\");\n    var axisHelper = __webpack_require__(\"3yJd\");\n    var AxisBuilder = __webpack_require__(\"vjPX\");\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ \"zEoQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _zrender = __webpack_require__(\"hv2j\");\n\n(function () {\n  for (var key in _zrender) {\n    if (_zrender == null || !_zrender.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _zrender[key];\n  }\n})();\n\nvar _export = __webpack_require__(\"fNhY\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\n__webpack_require__(\"jLnL\");\n\n__webpack_require__(\"VmZa\");\n\n/***/ }),\n\n/***/ \"zMj2\":\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ \"zz1u\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(\"ecfp\");\n\n    __webpack_require__(\"s48c\");\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.9ebf94807e677d7e6c34.js","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = +UTs\n// module chunks = 0","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = +Y0c\n// module chunks = 0","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = /+sa\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = /86O\n// module chunks = 0","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = /ZBO\n// module chunks = 0","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = /gxq\n// module chunks = 0","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = /n1K\n// module chunks = 0","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/arrayDiff2.js\n// module id = 0fQF\n// module chunks = 0","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/vml/Painter.js\n// module id = 0jKn\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    var subPixelOptimize = graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            var style = el.style;\n            var insideRollbackOpt = style.insideRollbackOpt;\n\n            // Consider case: only `position: 'top'` is set on emphasis, then text\n            // color should be returned to `autoColor`, rather than remain '#fff'.\n            // So we should rollback then apply again after style merging.\n            insideRollbackOpt && rollbackInsideStyle(style);\n\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            style.extendFrom(el.__hoverStl);\n\n            // Do not save `insideRollback`.\n            if (insideRollbackOpt) {\n                applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt);\n\n                // textFill may be rollbacked to null.\n                if (style.textFill == null) {\n                    style.textFill = insideRollbackOpt.autoColor;\n                }\n            }\n\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * @param {Object|module:zrender/graphic/Style} normalStyle\n     * @param {Object} emphasisStyle\n     * @param {module:echarts/model/Model} normalModel\n     * @param {module:echarts/model/Model} emphasisModel\n     * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n     * @param {Object} [opt.defaultText]\n     * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n     *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {Object} [normalSpecified]\n     * @param {Object} [emphasisSpecified]\n     */\n    graphic.setLabelStyle = function (\n        normalStyle, emphasisStyle,\n        normalModel, emphasisModel,\n        opt,\n        normalSpecified, emphasisSpecified\n    ) {\n        opt = opt || EMPTY_OBJ;\n        var labelFetcher = opt.labelFetcher;\n        var labelDataIndex = opt.labelDataIndex;\n        var labelDimIndex = opt.labelDimIndex;\n\n        // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n        // is not supported util someone requests.\n\n        var showNormal = normalModel.getShallow('show');\n        var showEmphasis = emphasisModel.getShallow('show');\n\n        // Consider performance, only fetch label when necessary.\n        // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n        // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n        var baseText = (showNormal || showEmphasis)\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex)\n                    : null,\n                opt.defaultText\n            )\n            : null;\n        var normalStyleText = showNormal ? baseText : null;\n        var emphasisStyleText = showEmphasis\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex)\n                    : null,\n                baseText\n            )\n            : null;\n\n        // Optimize: If style.text is null, text will not be drawn.\n        if (normalStyleText != null || emphasisStyleText != null) {\n            // Always set `textStyle` even if `normalStyle.text` is null, because default\n            // values have to be set on `normalStyle`.\n            // If we set default values on `emphasisStyle`, consider case:\n            // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n            // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n            // Then the 'red' will not work on emphasis.\n            setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n            setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n        }\n\n        normalStyle.text = normalStyleText;\n        emphasisStyle.text = emphasisStyleText;\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     * @param {boolean} [isEmphasis]\n     */\n    var setTextStyle = graphic.setTextStyle = function (\n        textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis\n    ) {\n        setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style.\n     * @deprecated\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        var isEmphasis;\n\n        if (defaultColor === false) {\n            isEmphasis = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.autoColor = defaultColor;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n     *              If autoColor specified, it is used as default textFill.\n     *      useInsideStyle:\n     *              `true`: Use inside style (textFill, textStroke, textLineWidth)\n     *                  if `textFill` is not specified.\n     *              `false`: Do not use inside style.\n     *              `null/undefined`: use inside style if `isRectText` is true and\n     *                  `textFill` is not specified and textPosition contains `'inside'`.\n     *      forceRich: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (isEmphasis ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), isEmphasis ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n        // In merge mode, default value should not be given.\n        globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n\n        textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt)\n            || globalTextStyle.color;\n        textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt)\n            || globalTextStyle.textBorderColor;\n        textStyle.textLineWidth = zrUtil.retrieve2(\n            textStyleModel.getShallow('textBorderWidth'),\n            globalTextStyle.textBorderWidth\n        );\n\n        if (!isEmphasis) {\n            if (isBlock) {\n                // Always set `insideRollback`, for clearing previous.\n                var originalTextPosition = textStyle.textPosition;\n                textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt);\n                // Save original textPosition, because style.textPosition will be repalced by\n                // real location (like [10, 30]) in zrender.\n                textStyle.insideOriginalTextPosition = originalTextPosition;\n                textStyle.insideRollbackOpt = opt;\n            }\n\n            // Set default finally.\n            if (textStyle.textFill == null) {\n                textStyle.textFill = opt.autoColor;\n            }\n        }\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    function applyInsideStyle(textStyle, textPosition, opt) {\n        var useInsideStyle = opt.useInsideStyle;\n        var insideRollback;\n\n        if (textStyle.textFill == null\n            && useInsideStyle !== false\n            && (useInsideStyle === true\n                || (opt.isRectText\n                    && textPosition\n                    // textPosition can be [10, 30]\n                    && typeof textPosition === 'string'\n                    && textPosition.indexOf('inside') >= 0\n                )\n            )\n        ) {\n            insideRollback = {\n                textFill: null,\n                textStroke: textStyle.textStroke,\n                textLineWidth: textStyle.textLineWidth\n            };\n            textStyle.textFill = '#fff';\n            // Consider text with #fff overflow its container.\n            if (textStyle.textStroke == null) {\n                textStyle.textStroke = opt.autoColor;\n                textStyle.textLineWidth == null && (textStyle.textLineWidth = 2);\n            }\n        }\n\n        return insideRollback;\n    }\n\n    function rollbackInsideStyle(style) {\n        var insideRollback = style.insideRollback;\n        if (insideRollback) {\n            style.textFill = insideRollback.textFill;\n            style.textStroke = insideRollback.textStroke;\n            style.textLineWidth = insideRollback.textLineWidth;\n        }\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 0sHC\n// module chunks = 0","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 1Hui\n// module chunks = 0","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 1Nix\n// module chunks = 0","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 1Xuh\n// module chunks = 0","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n    var labelHelper = require('./labelHelper');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n\n        if (valueDim != null) {\n            graphic.setLabelStyle(\n                elStyle, hoverItemStyle, labelModel, hoverLabelModel,\n                {\n                    labelFetcher: seriesModel,\n                    labelDataIndex: idx,\n                    defaultText: data.get(valueDim, idx),\n                    isRectText: true,\n                    autoColor: color\n                }\n            );\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        // FIXME\n        // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = null;\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 1bHA\n// module chunks = 0","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 2HcM\n// module chunks = 0","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 2I/p\n// module chunks = 0","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 2M5Q\n// module chunks = 0","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 2XvD\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis\n                && min != null\n                && min !== 'dataMin'\n                && typeof min !== 'function'\n                && !zrUtil.eqNaN(min)\n            ) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis\n                && max != null\n                && max !== 'dataMax'\n                && typeof max !== 'function'\n                && !zrUtil.eqNaN(max)\n            ) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 2uoh\n// module chunks = 0","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 3h1/\n// module chunks = 0","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        else if (typeof min === 'function') {\n            min = min({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n        else if (typeof max === 'function') {\n            max = max({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 3yJd\n// module chunks = 0","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 42YS\n// module chunks = 0","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 43ae\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 46eW\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 4UDB\n// module chunks = 0","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale);\n    attr(svgEl, 'paint-order', 'stroke');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive % PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    }\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/graphic.js\n// module id = 4w1v\n// module chunks = 0","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 56C7\n// module chunks = 0","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.is-iterable.js\n// module id = 5PlU\n// module chunks = 0 1 2","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 5QRV\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 5dr1\n// module chunks = 0","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var axisLabelModel = axisModel.getModel('axisLabel');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = axisLabelModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        each(axesMap.x, function (xAxis) {\n            fixAxisOnZero(axesMap, 'y', xAxis);\n        });\n        each(axesMap.y, function (yAxis) {\n            fixAxisOnZero(axesMap, 'x', yAxis);\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    function fixAxisOnZero(axesMap, otherAxisDim, axis) {\n        // onZero can not be enabled in these two situations:\n        // 1. When any other axis is a category axis.\n        // 2. When no axis is cross 0 point.\n        var axes = axesMap[otherAxisDim];\n\n        if (!axis.onZero) {\n            return;\n        }\n\n        var onZeroAxisIndex = axis.onZeroAxisIndex;\n\n        // If target axis is specified.\n        if (onZeroAxisIndex != null) {\n            var otherAxis = axes[onZeroAxisIndex];\n            if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n                axis.onZero = false;\n            }\n            return;\n        }\n\n        for (var idx in axes) {\n            if (axes.hasOwnProperty(idx)) {\n                var otherAxis = axes[idx];\n                if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n                    onZeroAxisIndex = +idx;\n                    break;\n                }\n            }\n        }\n\n        if (onZeroAxisIndex == null) {\n            axis.onZero = false;\n        }\n        axis.onZeroAxisIndex = onZeroAxisIndex;\n    }\n\n    function canNotOnZeroToAxis(axis) {\n        return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n    }\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {number} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n                axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 5vFd\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 67nf\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 6Kqb\n// module chunks = 0","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/vml/graphic.js\n// module id = 6MCj\n// module chunks = 0","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 7XrG\n// module chunks = 0","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option, isTheme) {\n        compatStyle(option, isTheme);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 8V5i\n// module chunks = 0","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 8b51\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 9N6q\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"app-container sign\"\n  }, [_c('el-tabs', {\n    on: {\n      \"tab-click\": _vm.handleClick\n    },\n    model: {\n      value: (_vm.activeName),\n      callback: function($$v) {\n        _vm.activeName = $$v\n      },\n      expression: \"activeName\"\n    }\n  }, [_c('el-tab-pane', {\n    attrs: {\n      \"label\": \"会员签到\",\n      \"name\": \"first\"\n    }\n  }, [_c('el-form', {\n    staticClass: \"search-member-form\",\n    attrs: {\n      \"inline\": true\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"手机号码\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"placeholder\": \"请输入会员手机号码\",\n      \"icon\": \"search\",\n      \"on-icon-click\": _vm.handleIconClick\n    },\n    model: {\n      value: (_vm.mobile),\n      callback: function($$v) {\n        _vm.mobile = $$v\n      },\n      expression: \"mobile\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"会员卡\"\n    }\n  }, [_c('el-tooltip', {\n    attrs: {\n      \"effect\": \"dark\",\n      \"content\": (_vm.isCanReadCard ? '点击按钮读卡' : '放置卡片读卡'),\n      \"placement\": \"top\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"placeholder\": \"读卡器读取\"\n    },\n    model: {\n      value: (_vm.card_id),\n      callback: function($$v) {\n        _vm.card_id = $$v\n      },\n      expression: \"card_id\"\n    }\n  }, [(_vm.isCanReadCard) ? _c('el-button', {\n    attrs: {\n      \"slot\": \"prepend\"\n    },\n    on: {\n      \"click\": _vm.readCard\n    },\n    slot: \"prepend\"\n  }, [_c('span', {\n    staticClass: \"read-card\"\n  }, [_c('icon-svg', {\n    attrs: {\n      \"icon-class\": \"readcard\"\n    }\n  })], 1)]) : _vm._e(), _vm._v(\" \"), (_vm.isCanReadCard) ? _c('el-button', {\n    attrs: {\n      \"slot\": \"append\",\n      \"icon\": \"delete\"\n    },\n    on: {\n      \"click\": _vm.clearCardID\n    },\n    slot: \"append\"\n  }) : _vm._e()], 1)], 1)], 1)], 1), _vm._v(\" \"), _c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.isFinded),\n      expression: \"isFinded\"\n    }],\n    staticClass: \"sign-member-info\"\n  }, [_c('el-card', {\n    staticClass: \"box-card\"\n  }, [_c('div', {\n    staticClass: \"clearfix\",\n    attrs: {\n      \"slot\": \"header\"\n    },\n    slot: \"header\"\n  }, [_c('span', {\n    staticStyle: {\n      \"line-height\": \"36px\"\n    }\n  }, [_vm._v(\"会员信息\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text item\"\n  }, [_c('el-row', {\n    attrs: {\n      \"gutter\": 10\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"sm\": 16\n    }\n  }, [_c('el-row', {\n    attrs: {\n      \"gutter\": 10\n    }\n  }, [_c('el-col', {\n    staticClass: \"info-item\",\n    attrs: {\n      \"sm\": 12\n    }\n  }, [_c('label', [_vm._v(\"姓名: \")]), _vm._v(\" \"), _c('span', [_vm._v(_vm._s(_vm.memberInfo.name || '未设置'))])]), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"info-item\",\n    attrs: {\n      \"sm\": 12\n    }\n  }, [_c('label', [_vm._v(\"性别: \")]), _vm._v(\" \"), _c('span', [_vm._v(_vm._s(!_vm.memberInfo.sex ? '未知' : _vm.memberInfo.sex === 1 ? '男' : '女'))])]), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"info-item\",\n    attrs: {\n      \"sm\": 12\n    }\n  }, [_c('label', [_vm._v(\"电话: \")]), _vm._v(\" \"), _c('span', [_vm._v(_vm._s(_vm.memberInfo.mobile || '未设置'))])]), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"info-item\",\n    attrs: {\n      \"sm\": 12\n    }\n  }, [_c('label', [_vm._v(\"销售: \")]), _vm._v(\" \"), _c('span', [_vm._v(_vm._s(_vm.memberInfo.sale_staff || '未设置'))])])], 1)], 1), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"sm\": 8\n    }\n  }, [_c('div', {\n    staticClass: \"grid-content user-photo\"\n  }, [(_vm.memberInfo.photo) ? _c('img', {\n    attrs: {\n      \"src\": _vm.memberInfo.photo\n    }\n  }) : _c('span', [_vm._v(\"该会员暂无图片\")])])])], 1)], 1)]), _vm._v(\" \"), _c('el-card', {\n    staticClass: \"box-card\"\n  }, [_c('div', {\n    staticClass: \"clearfix\",\n    attrs: {\n      \"slot\": \"header\"\n    },\n    slot: \"header\"\n  }, [_c('span', {\n    staticStyle: {\n      \"line-height\": \"36px\"\n    }\n  }, [_vm._v(\"签到\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"text item\"\n  }, [_c('el-form', {\n    ref: \"form\",\n    staticClass: \"sign-form\",\n    attrs: {\n      \"model\": _vm.form,\n      \"rules\": _vm.formRules,\n      \"label-width\": \"150px\",\n      \"label-position\": _vm.labelPosition\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": \"选择场馆\",\n      \"prop\": \"store_id\"\n    }\n  }, [_c('el-radio-group', {\n    model: {\n      value: (_vm.form.store_id),\n      callback: function($$v) {\n        _vm.form.store_id = $$v\n      },\n      expression: \"form.store_id\"\n    }\n  }, [_c('el-radio', {\n    attrs: {\n      \"label\": 2\n    }\n  }, [_vm._v(\"龙珠店\")]), _vm._v(\" \"), _c('el-radio', {\n    attrs: {\n      \"label\": 1\n    }\n  }, [_vm._v(\"海德店\")])], 1)], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"卡片种类\",\n      \"prop\": \"mobile\"\n    }\n  }, [_c('el-radio-group', {\n    staticClass: \"card_type\",\n    model: {\n      value: (_vm.form.mobile),\n      callback: function($$v) {\n        _vm.form.mobile = $$v\n      },\n      expression: \"form.mobile\"\n    }\n  }, [_c('el-radio', {\n    attrs: {\n      \"label\": _vm.memberInfo.mobile\n    }\n  }, [_c('div', [_vm._v(_vm._s(_vm.memberInfo.card_id || '无卡号'))]), _vm._v(\" \"), _c('div', [_vm._v(_vm._s(_vm.memberInfo.card_type_name || '暂未绑定会员卡'))]), _vm._v(\" \"), _c('div', [_vm._v(_vm._s(_vm.memberInfo.card_start_time ? _vm.formatDateTime(_vm.memberInfo.card_start_time) + ' 至 ' + _vm.formatDateTime(_vm.memberInfo.card_end_time) : '有效期无'))]), _vm._v(\" \"), _c('div', [_vm._v(\"剩余：\\n                                            \"), _c('span', {\n    staticStyle: {\n      \"color\": \"#fd6440\"\n    }\n  }, [_vm._v(_vm._s(_vm.cardEndTime(_vm.memberInfo.card_end_time) >= 0 ? _vm.cardEndTime(_vm.memberInfo.card_end_time) : 0) + \" 天\")])])])], 1)], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": \"\"\n    }\n  }, [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.submitForm('form')\n      }\n    }\n  }, [_vm._v(\"确认签到\")])], 1)], 1)], 1)])], 1)], 1), _vm._v(\" \"), _c('el-tab-pane', {\n    staticClass: \"sign-tongji\",\n    attrs: {\n      \"label\": \"签到记录\",\n      \"name\": \"second\"\n    }\n  }, [_c('div', {\n    staticClass: \"select_store\"\n  }, [_c('el-select', {\n    attrs: {\n      \"placeholder\": \"请选择\"\n    },\n    model: {\n      value: (_vm.store_type),\n      callback: function($$v) {\n        _vm.store_type = $$v\n      },\n      expression: \"store_type\"\n    }\n  }, _vm._l((_vm.stores), function(item) {\n    return _c('el-option', {\n      key: item.value,\n      attrs: {\n        \"label\": item.label,\n        \"value\": item.value\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('el-row', {\n    attrs: {\n      \"gutter\": 20\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"sm\": 8\n    }\n  }, [_c('el-card', {\n    staticClass: \"today-tongji-wrap\"\n  }, [_c('div', {\n    staticClass: \"today-tongji\"\n  }, [_c('div', {\n    staticClass: \"today-tongji-title\"\n  }, [_vm._v(\"\\n                                今日签到会员\\n                            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"today-tongji-count\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.todayTongjiCount.today) + \"\\n                            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"other\"\n  }, [_c('div', [_vm._v(\"昨日：\" + _vm._s(_vm.todayTongjiCount.lastDay) + \" \")]), _vm._v(\" \"), _c('div', [_vm._v(\"本周：\" + _vm._s(_vm.todayTongjiCount.thisWeek) + \" \")]), _vm._v(\" \"), _c('div', [_vm._v(\"本月：\" + _vm._s(_vm.todayTongjiCount.thisMonth))])])])])], 1), _vm._v(\" \"), _c('el-col', {\n    staticClass: \"my-chart-wrap\",\n    attrs: {\n      \"sm\": 16\n    }\n  }, [_c('el-card', [_c('div', {\n    staticClass: \"count-range\"\n  }, [_c('el-radio-group', {\n    model: {\n      value: (_vm.countRange),\n      callback: function($$v) {\n        _vm.countRange = $$v\n      },\n      expression: \"countRange\"\n    }\n  }, [_c('el-radio-button', {\n    attrs: {\n      \"label\": \"近30天\"\n    }\n  }), _vm._v(\" \"), _c('el-radio-button', {\n    attrs: {\n      \"label\": \"近15天\"\n    }\n  }), _vm._v(\" \"), _c('el-radio-button', {\n    attrs: {\n      \"label\": \"近7天\"\n    }\n  })], 1), _vm._v(\" \"), _c('el-date-picker', {\n    attrs: {\n      \"type\": \"daterange\",\n      \"placeholder\": \"选择日期范围\"\n    },\n    model: {\n      value: (_vm.countRangeByPicker),\n      callback: function($$v) {\n        _vm.countRangeByPicker = $$v\n      },\n      expression: \"countRangeByPicker\"\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"myChart\"\n  }, [_c('div', {\n    style: ({\n      width: _vm.echat.width + 'px',\n      height: _vm.echat.height + 'px'\n    }),\n    attrs: {\n      \"id\": \"myChart\"\n    }\n  })])])], 1)], 1)], 1)], 1)], 1)\n},staticRenderFns: []}\nmodule.exports.render._withStripped = true\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n     require(\"vue-hot-reload-api\").rerender(\"data-v-577d32ea\", module.exports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-577d32ea\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/sign/index.vue\n// module id = 9meg\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 9qnA\n// module chunks = 0","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = AAi1\n// module chunks = 0","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = ABnm\n// module chunks = 0","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = AKXb\n// module chunks = 0","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = AjK0\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = AlhT\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = BNYN\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/get-iterator.js\n// module id = BO1k\n// module chunks = 0 1 2 3","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = BeCT\n// module chunks = 0","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = BuI2\n// module chunks = 0","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = BwZ6\n// module chunks = 0","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = C1+n\n// module chunks = 0","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = C7PF\n// module chunks = 0","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = CCtz\n// module chunks = 0","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = D7EH\n// module chunks = 0","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = DRaW\n// module chunks = 0","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = DpwM\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            // Backward compat: using subType on theme.\n            // But if name duplicate between series subType\n            // (for example: parallel) add component mainType,\n            // add suffix 'Series'.\n            var themeSubType = this.subType;\n            if (ComponentModel.hasClass(themeSubType)) {\n                themeSubType += 'Series';\n            }\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = EJsE\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = Gw4f\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = GxVO\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = HHfb\n// module chunks = 0","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = HKuw\n// module chunks = 0","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = I0Vc\n// module chunks = 0","\n\n    require('./gridSimple');\n\n    require('./axisPointer/CartesianAxisPointer');\n\n    require('./axisPointer');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/grid.js\n// module id = ILx8\n// module chunks = 0","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n    var backwardCompat = require('./preprocessor/backwardCompat');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        var theme = zrUtil.clone(theme);\n        theme && backwardCompat(theme, true);\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = theme;\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.1',\n        dependencies: {\n            zrender: '3.6.1'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(backwardCompat);\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = Icdr\n// module chunks = 0","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = JMnz\n// module chunks = 0","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = K0T9\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = KsMi\n// module chunks = 0","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = LICT\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = MAom\n// module chunks = 0","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n    var fixClipWithShadow = require('zrender/lib/graphic/helper/fixClipWithShadow');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = MXTC\n// module chunks = 0","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = MyoG\n// module chunks = 0","\n\n    var textContain = require('zrender/lib/contain/text');\n    var graphicUtil = require('../../util/graphic');\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [isEmphasis]\n         * @return {string}\n         */\n        getTextColor: function (isEmphasis) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!isEmphasis && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = NZsM\n// module chunks = 0","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = No7X\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = OT4p\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = Of86\n// module chunks = 0","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = OkSz\n// module chunks = 0","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = Oq2I\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = Ou7x\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = OxCu\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = PD67\n// module chunks = 0","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = PWa9\n// module chunks = 0","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = Pdtn\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = Pgdp\n// module chunks = 0","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(svgRoot, tagNames, markLabel) {\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element._dom && defs.contains(element._dom)) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element._dom = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n  defs.removeChild(element._dom);\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/helper/Definable.js\n// module id = Pmfi\n// module chunks = 0","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style['user-select'] = 'none';\n  svgRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(svgRoot);\n  this.clipPathManager = new ClippathManager(svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width && this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToSvg: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:img/svg+xml;utf-8,' + unescape(html);\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/Painter.js\n// module id = Q5xN\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = QCrJ\n// module chunks = 0","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = QD+P\n// module chunks = 0","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = QxFU\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = RKzr\n// module chunks = 0","var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  require(\"!!vue-style-loader!css-loader?{\\\"minimize\\\":false,\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-577d32ea\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-577d32ea\\\",\\\"hasScoped\\\":false}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\nComponent.options.__file = \"E:\\\\gitee\\\\adminPage\\\\src\\\\views\\\\sign\\\\index.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== \"default\" && key.substr(0, 2) !== \"__\"})) {console.error(\"named exports are not supported in *.vue files.\")}\nif (Component.options.functional) {console.error(\"[vue-loader] index.vue: functional components are not supported with templates, they should use render functions.\")}\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-577d32ea\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-577d32ea\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/sign/index.vue\n// module id = RQuk\n// module chunks = 0","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = RYbJ\n// module chunks = 0","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = Rfu2\n// module chunks = 0","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = RiVu\n// module chunks = 0","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var modelUtil = require('../../util/model');\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/labelHelper.js\n// module id = RjA7\n// module chunks = 0","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = Rtf0\n// module chunks = 0","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = SlE6\n// module chunks = 0","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = Sm9T\n// module chunks = 0","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = TCXJ\n// module chunks = 0","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(svgRoot) {\n  Definable.call(this, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/helper/ClippathManager.js\n// module id = TDz/\n// module chunks = 0","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = TIfeS\n// module chunks = 0","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = UAiw\n// module chunks = 0","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = UkNE\n// module chunks = 0","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = V4nf\n// module chunks = 0","import fetch from '@/utils/fetch1';\r\nconst qs = require('qs');\r\n\r\nexport function add(params) {\r\n  return fetch({\r\n    url: '/api/sign/add',\r\n    method: 'post',\r\n    data: qs.stringify(params),\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n  });\r\n}\r\n\r\nexport function getRangeTongjiList(params) {\r\n  return fetch({\r\n    url: '/api/sign/getRangeTongjiList',\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    data: qs.stringify(params)\r\n  });\r\n}\r\n\r\nexport function getSingleTongji(params) {\r\n  return fetch({\r\n    url: '/api/sign/getSingleTongji',\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    data: qs.stringify(params)\r\n  });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/api/sign.js","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/core.js\n// module id = VewU\n// module chunks = 0","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/vml/vml.js\n// module id = VmZa\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/entries\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/entries.js\n// module id = W3Iv\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 正多边形\n * @module zrender/shape/Isogon\n */\nvar PI = Math.PI;\nvar sin = Math.sin;\nvar cos = Math.cos;\n\nvar _default = Path.extend({\n  type: 'isogon',\n  shape: {\n    x: 0,\n    y: 0,\n    r: 0,\n    n: 0\n  },\n  buildPath: function (ctx, shape) {\n    var n = shape.n;\n\n    if (!n || n < 2) {\n      return;\n    }\n\n    var x = shape.x;\n    var y = shape.y;\n    var r = shape.r;\n    var dStep = 2 * PI / n;\n    var deg = -PI / 2;\n    ctx.moveTo(x + r * cos(deg), y + r * sin(deg));\n\n    for (var i = 0, end = n - 1; i < end; i++) {\n      deg += dStep;\n      ctx.lineTo(x + r * cos(deg), y + r * sin(deg));\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Isogon.js\n// module id = Wmy2\n// module chunks = 0","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = XAC3\n// module chunks = 0","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/is-iterable.js\n// module id = Xd32\n// module chunks = 0 1 2","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = Y5nL\n// module chunks = 0","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = YNzw\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = Ylhr\n// module chunks = 0","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = a1Sp\n// module chunks = 0","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = aYad\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = ao1T\n// module chunks = 0","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = avYi\n// module chunks = 0","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = b8C2\n// module chunks = 0","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/vml/core.js\n// module id = cI6i\n// module chunks = 0","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = cO/Q\n// module chunks = 0","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = ct4P\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _isIterable2 = require(\"../core-js/is-iterable\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = require(\"../core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/slicedToArray.js\n// module id = d7EF\n// module chunks = 0 1 2","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = d8Tt\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = dDRy\n// module chunks = 0","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = dE09\n// module chunks = 0","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = dOVI\n// module chunks = 0","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = dZ2L\n// module chunks = 0","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = dZZy\n// module chunks = 0","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = dnLe\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = dtW/\n// module chunks = 0","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = e8/X\n// module chunks = 0","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = e95b\n// module chunks = 0","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = eH0a\n// module chunks = 0","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = eZxa\n// module chunks = 0","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = ecfp\n// module chunks = 0","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = em4M\n// module chunks = 0","var zrUtil = require(\"./core/util\");\n\nexports.util = zrUtil;\n\nvar matrix = require(\"./core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"./core/vector\");\n\nexports.vector = vector;\n\nvar colorTool = require(\"./tool/color\");\n\nexports.color = colorTool;\n\nvar pathTool = require(\"./tool/path\");\n\nexports.path = pathTool;\n\nvar _Group = require(\"./container/Group\");\n\nexports.Group = _Group;\n\nvar _Path = require(\"./graphic/Path\");\n\nexports.Path = _Path;\n\nvar _Image = require(\"./graphic/Image\");\n\nexports.Image = _Image;\n\nvar _CompoundPath = require(\"./graphic/CompoundPath\");\n\nexports.CompoundPath = _CompoundPath;\n\nvar _Text = require(\"./graphic/Text\");\n\nexports.Text = _Text;\n\nvar _Arc = require(\"./graphic/shape/Arc\");\n\nexports.Arc = _Arc;\n\nvar _BezierCurve = require(\"./graphic/shape/BezierCurve\");\n\nexports.BezierCurve = _BezierCurve;\n\nvar _Circle = require(\"./graphic/shape/Circle\");\n\nexports.Circle = _Circle;\n\nvar _Droplet = require(\"./graphic/shape/Droplet\");\n\nexports.Droplet = _Droplet;\n\nvar _Ellipse = require(\"./graphic/shape/Ellipse\");\n\nexports.Ellipse = _Ellipse;\n\nvar _Heart = require(\"./graphic/shape/Heart\");\n\nexports.Heart = _Heart;\n\nvar _Isogon = require(\"./graphic/shape/Isogon\");\n\nexports.Isogon = _Isogon;\n\nvar _Line = require(\"./graphic/shape/Line\");\n\nexports.Line = _Line;\n\nvar _Polygon = require(\"./graphic/shape/Polygon\");\n\nexports.Polygon = _Polygon;\n\nvar _Polyline = require(\"./graphic/shape/Polyline\");\n\nexports.Polyline = _Polyline;\n\nvar _Rect = require(\"./graphic/shape/Rect\");\n\nexports.Rect = _Rect;\n\nvar _Ring = require(\"./graphic/shape/Ring\");\n\nexports.Ring = _Ring;\n\nvar _Rose = require(\"./graphic/shape/Rose\");\n\nexports.Rose = _Rose;\n\nvar _Sector = require(\"./graphic/shape/Sector\");\n\nexports.Sector = _Sector;\n\nvar _Star = require(\"./graphic/shape/Star\");\n\nexports.Star = _Star;\n\nvar _Trochoid = require(\"./graphic/shape/Trochoid\");\n\nexports.Trochoid = _Trochoid;\n\nvar _LinearGradient = require(\"./graphic/LinearGradient\");\n\nexports.LinearGradient = _LinearGradient;\n\nvar _RadialGradient = require(\"./graphic/RadialGradient\");\n\nexports.RadialGradient = _RadialGradient;\n\nvar _Pattern = require(\"./graphic/Pattern\");\n\nexports.Pattern = _Pattern;\n\nvar _BoundingRect = require(\"./core/BoundingRect\");\n\nexports.BoundingRect = _BoundingRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/export.js\n// module id = fNhY\n// module chunks = 0","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = fgF4\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 心形\n * @module zrender/graphic/shape/Heart\n */\nvar _default = Path.extend({\n  type: 'heart',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.width;\n    var b = shape.height;\n    ctx.moveTo(x, y);\n    ctx.bezierCurveTo(x + a / 2, y - b * 2 / 3, x + a * 2, y + b / 3, x, y + b);\n    ctx.bezierCurveTo(x - a * 2, y + b / 3, x - a / 2, y - b * 2 / 3, x, y);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Heart.js\n// module id = fli2\n// module chunks = 0","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/get-iterator.js\n// module id = fxRn\n// module chunks = 0 1 2 3","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = g+yZ\n// module chunks = 0","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.get-iterator.js\n// module id = g8Ux\n// module chunks = 0 1 2 3","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es7.object.entries.js\n// module id = gSvA\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = h0jU\n// module chunks = 0","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(svgRoot) {\n  Definable.call(this, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/helper/GradientManager.js\n// module id = hZf2\n// module chunks = 0","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = hv2j\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = jHiU\n// module chunks = 0","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/svg.js\n// module id = jLnL\n// module chunks = 0","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = jMTz\n// module chunks = 0","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = kK7q\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = koEO\n// module chunks = 0","var requestFrame = (function () {\n  var window = this\n  var raf = window.requestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    function fallbackRAF(func) {\n      return window.setTimeout(func, 20)\n    }\n  return function requestFrameFunction(func) {\n    return raf(func)\n  }\n})()\n\nvar cancelFrame = (function () {\n  var window = this\n  var cancel = window.cancelAnimationFrame ||\n    window.mozCancelAnimationFrame ||\n    window.webkitCancelAnimationFrame ||\n    window.clearTimeout\n  return function cancelFrameFunction(id) {\n    return cancel(id)\n  }\n})()\n\nfunction resizeListener(e) {\n  var win = e.target || e.srcElement\n  if (win.__resizeRAF__) {\n    cancelFrame(win.__resizeRAF__)\n  }\n  win.__resizeRAF__ = requestFrame(function () {\n    var trigger = win.__resizeTrigger__\n    trigger.__resizeListeners__.forEach(function (fn) {\n      fn.call(trigger, e)\n    })\n  })\n}\n\nvar exports = function exports(element, fn) {\n  var window = this\n  var document = window.document\n  var isIE\n\n  var attachEvent = document.attachEvent\n  if (typeof navigator !== 'undefined') {\n    isIE = navigator.userAgent.match(/Trident/) ||\n      navigator.userAgent.match(/Edge/)\n  }\n\n  function objectLoad() {\n    this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__\n    this.contentDocument.defaultView.addEventListener('resize', resizeListener)\n  }\n\n  if (!element.__resizeListeners__) {\n    element.__resizeListeners__ = []\n    if (attachEvent) {\n      element.__resizeTrigger__ = element\n      element.attachEvent('onresize', resizeListener)\n    } else {\n      if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative'\n      }\n      var obj = (element.__resizeTrigger__ = document.createElement('object'))\n      obj.setAttribute(\n        'style',\n        'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1; opacity: 0;'\n      )\n      obj.setAttribute('class', 'resize-sensor')\n      obj.__resizeElement__ = element\n      obj.onload = objectLoad\n      obj.type = 'text/html'\n      if (isIE) {\n        element.appendChild(obj)\n      }\n      obj.data = 'about:blank'\n      if (!isIE) {\n        element.appendChild(obj)\n      }\n    }\n  }\n  element.__resizeListeners__.push(fn)\n}\n\nmodule.exports = typeof window === 'undefined' ? exports : exports.bind(window)\n\nmodule.exports.unbind = function (element, fn) {\n  var attachEvent = document.attachEvent\n  if (fn) {\n    element.__resizeListeners__.splice(\n      element.__resizeListeners__.indexOf(fn),\n      1\n    )\n  } else {\n    element.__resizeListeners__ = []\n  }\n  if (!element.__resizeListeners__.length) {\n    if (attachEvent) {\n      element.detachEvent('onresize', resizeListener)\n    } else {\n      element.__resizeTrigger__.contentDocument.defaultView.removeEventListener(\n        'resize',\n        resizeListener\n      )\n      delete element.__resizeTrigger__.contentDocument.defaultView.__resizeTrigger__\n      element.__resizeTrigger__ = !element.removeChild(\n        element.__resizeTrigger__\n      )\n    }\n    delete element.__resizeListeners__\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/element-resize-event/index.js\n// module id = le/s\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = lj6Z\n// module chunks = 0","var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-to-array.js\n// module id = mbce\n// module chunks = 0 1","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = me52\n// module chunks = 0","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = moDv\n// module chunks = 0","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = n5nI\n// module chunks = 0","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = oBGI\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.sign .search-member-form {\\n  text-align: center;\\n}\\n.sign .search-member-form > div {\\n  text-align: left;\\n}\\n.sign .read-card .svg-icon {\\n  font-size: 20px;\\n}\\n.sign .info-item {\\n  font-size: 14px;\\n  padding: 10px 0;\\n  line-height: 20px;\\n}\\n.sign .info-item label {\\n  color: #97a8be;\\n  font-size: 14px;\\n}\\n.sign .user-photo {\\n  text-align: center;\\n  font-size: 14px;\\n}\\n.sign .user-photo img {\\n  max-width: 100%;\\n  max-height: 300px;\\n  box-shadow: 0 0 1px 1px rgba(0, 0, 0, 0.1);\\n}\\n.sign .card_type {\\n  width: 100%;\\n}\\n.sign .card_type .el-radio {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  padding: 11px 0;\\n}\\n.sign .card_type .el-radio + .el-radio {\\n  margin-left: 0;\\n}\\n.sign .card_type .el-radio__label {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -ms-flex-wrap: wrap;\\n      flex-wrap: wrap;\\n  width: 80%;\\n}\\n.sign .card_type .el-radio__label > div {\\n  padding: 0 5px 10px 5px;\\n}\\n.sign .sign-tongji .select_store {\\n  padding-left: 10px;\\n  margin-bottom: 10px;\\n}\\n.sign .sign-tongji .today-tongji-wrap {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n}\\n.sign .sign-tongji .today-tongji {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  text-align: center;\\n  color: #3c3c3c;\\n}\\n.sign .sign-tongji .today-tongji .today-tongji-title {\\n    font-size: 20px;\\n}\\n.sign .sign-tongji .today-tongji .today-tongji-count {\\n    font-size: 60px;\\n    line-height: 80px;\\n}\\n.sign .sign-tongji .today-tongji .other {\\n    color: #a8a8a8;\\n    font-size: 14px;\\n    line-height: 20px;\\n}\\n.sign .sign-tongji .el-card {\\n  margin: 10px 0;\\n  height: 300px;\\n}\\n.sign .sign-tongji .my-chart-wrap .el-card__body {\\n  padding: 0;\\n}\\n.sign .sign-tongji .count-range {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  padding: 0 15px;\\n  height: 70px;\\n}\\n.sign .sign-tongji .count-range .el-date-editor {\\n    margin: 10px;\\n}\\n.sign .sign-tongji .myChart {\\n  height: 230px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":false,\"sourceMap\":false}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-577d32ea\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/sign/index.vue\n// module id = ofHq\n// module chunks = 0","<template>\r\n    <div class=\"app-container sign\">\r\n        <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\r\n            <el-tab-pane label=\"会员签到\" name=\"first\">\r\n                <el-form :inline=\"true\" class=\"search-member-form\">\r\n                    <el-form-item label=\"手机号码\">\r\n                        <el-input v-model=\"mobile\" placeholder=\"请输入会员手机号码\" icon=\"search\" :on-icon-click=\"handleIconClick\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"会员卡\">\r\n                        <el-tooltip effect=\"dark\" :content=\"(isCanReadCard ? '点击按钮读卡' : '放置卡片读卡')\" placement=\"top\">\r\n                            <el-input v-model=\"card_id\" placeholder=\"读卡器读取\">\r\n                                <el-button v-if=\"isCanReadCard\" slot=\"prepend\" @click=\"readCard\">\r\n                                    <span class=\"read-card\">\r\n                                        <icon-svg icon-class=\"readcard\" />\r\n                                    </span>\r\n                                </el-button>\r\n                                <el-button v-if=\"isCanReadCard\" slot=\"append\" icon=\"delete\" @click=\"clearCardID\">\r\n                                </el-button>\r\n                            </el-input>\r\n                        </el-tooltip>\r\n                    </el-form-item>\r\n                </el-form>\r\n                <div class=\"sign-member-info\" v-show=\"isFinded\">\r\n                    <el-card class=\"box-card\">\r\n                        <div slot=\"header\" class=\"clearfix\">\r\n                            <span style=\"line-height: 36px;\">会员信息</span>\r\n                        </div>\r\n                        <div class=\"text item\">\r\n                            <el-row :gutter=\"10\">\r\n                                <el-col :sm=\"16\">\r\n                                    <el-row :gutter=\"10\">\r\n                                        <el-col class=\"info-item\" :sm=\"12\">\r\n                                            <label>姓名: </label>\r\n                                            <span>{{ memberInfo.name || '未设置' }}</span>\r\n                                        </el-col>\r\n                                        <el-col class=\"info-item\" :sm=\"12\">\r\n                                            <label>性别: </label>\r\n                                            <span>{{ !memberInfo.sex ? '未知' : memberInfo.sex === 1 ? '男' : '女'}}</span>\r\n                                        </el-col>\r\n                                        <el-col class=\"info-item\" :sm=\"12\">\r\n                                            <label>电话: </label>\r\n                                            <span>{{ memberInfo.mobile || '未设置' }}</span>\r\n                                        </el-col>\r\n                                        <el-col class=\"info-item\" :sm=\"12\">\r\n                                            <label>销售: </label>\r\n                                            <span>{{ memberInfo.sale_staff || '未设置' }}</span>\r\n                                        </el-col>\r\n                                    </el-row>\r\n                                </el-col>\r\n                                <el-col :sm=\"8\">\r\n                                    <div class=\"grid-content user-photo\"><img v-if=\"memberInfo.photo\" :src=\"memberInfo.photo\" />\r\n                                        <span v-else>该会员暂无图片</span>\r\n                                    </div>\r\n                                </el-col>\r\n                            </el-row>\r\n                        </div>\r\n                    </el-card>\r\n                    <el-card class=\"box-card\">\r\n                        <div slot=\"header\" class=\"clearfix\">\r\n                            <span style=\"line-height: 36px;\">签到</span>\r\n                        </div>\r\n                        <div class=\"text item\">\r\n                            <el-form class=\"sign-form\" ref=\"form\" :model=\"form\" :rules=\"formRules\" label-width=\"150px\" :label-position=\"labelPosition\">\r\n                                <el-form-item label=\"选择场馆\" prop=\"store_id\">\r\n                                    <el-radio-group v-model=\"form.store_id\">\r\n                                        <el-radio :label=\"2\">龙珠店</el-radio>\r\n                                        <el-radio :label=\"1\">海德店</el-radio>\r\n                                    </el-radio-group>\r\n                                </el-form-item>\r\n                                <el-form-item label=\"卡片种类\" prop=\"mobile\">\r\n                                    <el-radio-group class=\"card_type\" v-model=\"form.mobile\">\r\n                                        <el-radio :label=\"memberInfo.mobile\">\r\n                                            <div>{{ memberInfo.card_id || '无卡号' }}</div>\r\n                                            <div>{{ memberInfo.card_type_name || '暂未绑定会员卡' }}</div>\r\n                                            <div>{{ memberInfo.card_start_time ? formatDateTime(memberInfo.card_start_time) + ' 至 ' + formatDateTime(memberInfo.card_end_time) : '有效期无' }}</div>\r\n                                            <div>剩余：\r\n                                                <span style=\"color: #fd6440\">{{ cardEndTime(memberInfo.card_end_time) >= 0 ? cardEndTime(memberInfo.card_end_time) : 0 }} 天</span>\r\n                                            </div>\r\n                                        </el-radio>\r\n                                    </el-radio-group>\r\n                                </el-form-item>\r\n                                <el-form-item label=\"\">\r\n                                    <el-button type=\"primary\" @click=\"submitForm('form')\">确认签到</el-button>\r\n                                </el-form-item>\r\n                            </el-form>\r\n                        </div>\r\n                    </el-card>\r\n\r\n                </div>\r\n            </el-tab-pane>\r\n            <el-tab-pane label=\"签到记录\" class=\"sign-tongji\" name=\"second\">\r\n                <div class=\"select_store\">\r\n                    <el-select v-model=\"store_type\" placeholder=\"请选择\">\r\n                        <el-option v-for=\"item in stores\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </div>\r\n                <el-row :gutter=\"20\">\r\n                    <el-col :sm=\"8\">\r\n                        <el-card class=\"today-tongji-wrap\">\r\n                            <div class=\"today-tongji\">\r\n                                <div class=\"today-tongji-title\">\r\n                                    今日签到会员\r\n                                </div>\r\n                                <div class=\"today-tongji-count\">\r\n                                    {{ todayTongjiCount.today }}\r\n                                </div>\r\n                                <div class=\"other\">\r\n                                    <div>昨日：{{ todayTongjiCount.lastDay }} </div>\r\n                                    <div>本周：{{ todayTongjiCount.thisWeek }} </div>\r\n                                    <div>本月：{{ todayTongjiCount.thisMonth }}</div>\r\n                                </div>\r\n                            </div>\r\n                        </el-card>\r\n                    </el-col>\r\n                    <el-col :sm=\"16\" class=\"my-chart-wrap\">\r\n                        <el-card>\r\n                            <div class=\"count-range\">\r\n                                <el-radio-group v-model=\"countRange\">\r\n                                    <el-radio-button label=\"近30天\"></el-radio-button>\r\n                                    <el-radio-button label=\"近15天\"></el-radio-button>\r\n                                    <el-radio-button label=\"近7天\"></el-radio-button>\r\n                                </el-radio-group>\r\n                                <el-date-picker v-model=\"countRangeByPicker\" type=\"daterange\" placeholder=\"选择日期范围\">\r\n                                </el-date-picker>\r\n                            </div>\r\n                            <div class=\"myChart\">\r\n                                <div id=\"myChart\" :style=\"{width: echat.width + 'px', height: echat.height + 'px'}\"></div>\r\n                            </div>\r\n                        </el-card>\r\n                    </el-col>\r\n                </el-row>\r\n            </el-tab-pane>\r\n        </el-tabs>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { memberInfo } from '@/api/member';\r\nimport { mapState, mapGetters, mapActions } from 'vuex';\r\nimport { formatDateTime } from '@/utils';\r\nimport { add, getRangeTongjiList } from '@/api/sign';\r\n\r\n// 引入基本模板\r\nlet echarts = require('echarts/lib/echarts');\r\n// 引入柱状图组件\r\nrequire('echarts/lib/chart/line')\r\n// 引入提示框和title组件\r\nrequire('echarts/lib/component/tooltip')\r\nrequire('echarts/lib/component/grid')\r\n\r\nconst elementResizeEvent = require('element-resize-event');\r\n\r\nexport default {\r\n    data() {\r\n        // 验证不为空\r\n        const validateEmpty = (rule, value, callback) => {\r\n            if (typeof value !== 'object' ? !value : !value.length) {\r\n                return callback(new Error(rule.errMsg));\r\n            }\r\n            callback();\r\n        }\r\n        return {\r\n            activeName: 'first',\r\n            mobile: '',\r\n            card_id: '',\r\n            memberInfo: {},\r\n            isFinded: false,\r\n            form: {\r\n                store_id: '',\r\n                mobile: ''\r\n            },\r\n            formRules: {\r\n                store_id: [\r\n                    { validator: validateEmpty, errMsg: '请选择门店', trigger: 'change' }\r\n                ],\r\n                mobile: [\r\n                    { validator: validateEmpty, errMsg: '请选择卡片', trigger: 'change' }\r\n                ]\r\n            },\r\n            store_type: '',\r\n            stores: [\r\n                {\r\n                    value: '0',\r\n                    label: '全部场馆'\r\n                },\r\n                {\r\n                    value: '1',\r\n                    label: '英威尔海德店'\r\n                },\r\n                {\r\n                    value: '2',\r\n                    label: '英威尔龙珠店'\r\n                }\r\n            ],\r\n            todayTongjiCount: {\r\n                today: 0,\r\n                lastDay: 0,\r\n                thisWeek: 0,\r\n                thisMonth: 0\r\n            },\r\n            myChart: null,\r\n            echat: {\r\n                width: '',\r\n                height: ''\r\n            },\r\n            echatData: {\r\n                keys: [\"08-16\", \"08-17\", \"08-18\", \"08-19\", \"08-20\", \"08-21\", \"08-22\", \"08-23\", \"08-24\", \"08-25\", \"08-26\", \"08-27\", \"08-28\", \"08-29\", \"08-30\", \"08-31\", \"09-01\", \"09-02\", \"09-03\", \"09-04\", \"09-05\", \"09-06\", \"09-07\", \"09-08\", \"09-09\", \"09-10\", \"09-11\", \"09-12\", \"09-13\", \"09-14\"],\r\n                values: [0, 0, 4, 1, 1, 1, 1, 1, 0, 0, 3, 7, 11, 4, 2, 4, 0, 2, 1, 0, 3, 3, 0, 1, 1, 0, 4, 0, 1, 0]\r\n            },\r\n            // 优化echat resize性能，使用定时器的方式\r\n            timerId: null,\r\n            countRange: '近30天',\r\n            countRangeByPicker: ''\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters([\r\n            'isCanReadCard',\r\n            'cardID'\r\n        ]),\r\n        ...mapState([\r\n            'winsize'\r\n        ]),\r\n        labelPosition() {\r\n            return (this.winsize === 'xs') ? 'top' : 'right';\r\n        },\r\n        signCountReq() {\r\n            console.log('-aaa-', this.countRange);\r\n            switch (this.countRange) {\r\n                case '近30天':\r\n                    return this.setSignCountReq(30);\r\n                    break;\r\n                case '近15天':\r\n                    return this.setSignCountReq(15);\r\n                    break;\r\n                case '近7天':\r\n                    return this.setSignCountReq(7);\r\n                    break;\r\n                default:\r\n                    if (this.countRangeByPicker[0]) {\r\n                        return {\r\n                            store_id: this.store_type,\r\n                            start_time: Math.round(this.countRangeByPicker[0].getTime() / 1000),\r\n                            end_time: Math.round(this.countRangeByPicker[1].getTime() / 1000)\r\n                        }\r\n                    } else {\r\n                        return this.setSignCountReq(30);\r\n                    }\r\n                    break;\r\n            }\r\n        },\r\n        echatOption() {\r\n            return {\r\n                tooltip: {\r\n                    trigger: 'axis'\r\n                },\r\n                grid: {\r\n                    top: '20',\r\n                    right: '20',\r\n                    bottom: '20',\r\n                    left: '20',\r\n                    containLabel: true\r\n                },\r\n                xAxis: {\r\n                    data: this.echatData.keys\r\n                },\r\n                yAxis: {},\r\n                series: [{\r\n                    name: '签到',\r\n                    type: 'line',\r\n                    smooth: true,\r\n                    data: this.echatData.values\r\n                }]\r\n            };\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapActions([\r\n            'actionReadCard'\r\n        ]),\r\n        clearCardID() {\r\n            this.card_id = '';\r\n        },\r\n        readCard() {\r\n            if (this.isCanReadCard) {\r\n                this.actionReadCard();\r\n                this.card_id = this.cardID;\r\n                console.log('读卡', this.card_id, this.cardID);\r\n            }\r\n        },\r\n        handleClick(tab, event) {\r\n            console.log(tab, event);\r\n            if (tab.label === '签到记录') {\r\n                this.myChart.resize();\r\n            }\r\n        },\r\n        handleIconClick(ev) {\r\n            memberInfo({ mobile: this.mobile }).then(response => {\r\n                this.memberInfo = response.data;\r\n                this.isFinded = true;\r\n            })\r\n        },\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    this.onSubmit();\r\n                } else {\r\n                    this.$message.error('提交失败，请检查表单！');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        onSubmit() {\r\n            const params = {\r\n                store_id: this.form.store_id,\r\n                card_id: this.form.card_id,\r\n                mobile: this.memberInfo.mobile\r\n            }\r\n            add(params).then(response => {\r\n                this.$message.success('签到成功');\r\n            })\r\n        },\r\n        formatDateTime(time) {\r\n            return formatDateTime(time)\r\n        },\r\n        cardEndTime(time) {\r\n            const now = Math.round(new Date().getTime() / 1000);\r\n            return time ? Math.round((time - now) / (60 * 60 * 24)) : '';\r\n        },\r\n        // 设置今日统计\r\n        setTodayTongjiCount() {\r\n            const now = new Date(),\r\n                year = now.getFullYear(),\r\n                month = now.getMonth(),\r\n                day = now.getDate(),\r\n                last = new Date(year, month - 1, day),\r\n                params = {\r\n                    store_id: this.store_type,\r\n                    start_time: Math.round(last.getTime() / 1000),\r\n                    end_time: Math.round(now.getTime() / 1000)\r\n                };\r\n            let today, lastDay, thisWeek = 0, thisMonth = 0;\r\n            getRangeTongjiList(params).then(response => {\r\n                const data = Object.entries(response.data);\r\n                let i = 0;\r\n                for (let [key, value] of data) {\r\n                    if (i > data.length - 8) {\r\n                        console.log('哈哈');\r\n                        thisWeek += 1 * value;\r\n                    }\r\n                    thisMonth += 1 * value;\r\n                    if (i === data.length - 2) {\r\n                        lastDay = value;\r\n                    }\r\n                    if (i === data.length - 1) {\r\n                        today = value;\r\n                    }\r\n                    i++;\r\n                }\r\n\r\n                console.log(data, {\r\n                    today,\r\n                    lastDay,\r\n                    thisWeek,\r\n                    thisMonth\r\n                });\r\n\r\n                this.todayTongjiCount = {\r\n                    today,\r\n                    lastDay,\r\n                    thisWeek,\r\n                    thisMonth\r\n                }\r\n            })\r\n\r\n        },\r\n        // 获取签到统计\r\n        getSignCount() {\r\n            getRangeTongjiList(this.signCountReq).then(response => {\r\n                let i = 0;\r\n                this.echatData.keys = [];\r\n                this.echatData.values = [];\r\n                for (let [key, value] of Object.entries(response.data)) {\r\n                    this.echatData.keys[i] = key;\r\n                    this.echatData.values[i] = value;\r\n                    i++;\r\n                }\r\n                this.drawLine();\r\n            })\r\n        },\r\n        drawLine() {\r\n            // 绘制图表\r\n            this.myChart.setOption(this.echatOption, true);\r\n        },\r\n        setEchatWH() {\r\n            const $myChartElm = document.querySelector('.myChart');\r\n            if (!$myChartElm) {\r\n                return;\r\n            }\r\n            const $myChart = window.getComputedStyle($myChartElm, null);\r\n            const $myChartWrap = window.getComputedStyle(document.querySelector('.my-chart-wrap'), null);\r\n            // 判断是不是百分比\r\n            const isBaifenbi = /%/.test($myChartWrap.width);\r\n            const width = isBaifenbi ? document.querySelector('.el-tabs').offsetWidth * ($myChartWrap.width.replace('%', '') / 100) - 2 * $myChartWrap.paddingLeft.replace('px', '') : $myChartWrap.width.replace('px', '') - 2 * $myChartWrap.paddingLeft.replace('px', '');\r\n            this.echat.width = width;\r\n            this.echat.height = 1 * $myChart.height.replace('px', '');\r\n            console.log(this.echat, isBaifenbi, width);\r\n        },\r\n        setSignCountReq(days) {\r\n            const now = new Date();\r\n            return {\r\n                store_id: this.store_type,\r\n                start_time: Math.round((now.getTime() - 1000 * 60 * 60 * 24 * days) / 1000),\r\n                end_time: Math.round(now.getTime() / 1000)\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        signCountReq() {\r\n            console.log('=改变=', this.signCountReq);\r\n            this.getSignCount();\r\n        },\r\n        card_id() {\r\n            if (!this.card_id) {\r\n                console.log('为空，不请求');\r\n                return;\r\n            }\r\n            // this.card_id = '0002833000';\r\n            memberInfo({ card_id: this.card_id }).then(response => {\r\n                this.memberInfo = response.data;\r\n                this.isFinded = true;\r\n            })\r\n        },\r\n        store_type() {\r\n            this.signCountReq.store_id = this.store_type;\r\n            this.setTodayTongjiCount();\r\n            this.getSignCount();\r\n        },\r\n        countRangeByPicker() {\r\n            // element-ui@1.4.8中 如果直接使picker的module等于countRange会出错，因为picker不允许接收非允许的数据格式\r\n            this.countRange = this.countRangeByPicker;\r\n        }\r\n    },\r\n    created() {\r\n        this.setTodayTongjiCount();\r\n    },\r\n    mounted() {\r\n        this.setEchatWH();\r\n        // 基于准备好的dom，初始化echarts实例\r\n        this.myChart = echarts.init(document.getElementById('myChart'))\r\n        this.getSignCount();\r\n        const element = document.querySelector('.el-tabs');\r\n        if (!element) {\r\n            return;\r\n        }\r\n        const _this = this;\r\n        elementResizeEvent(element, function() {\r\n            console.log(\"resized!\");\r\n            console.log(element.offsetWidth);\r\n            _this.setEchatWH();\r\n\r\n            // 节流\r\n            // 清除执行函数的定时器，第一次进入为空\r\n            clearTimeout(_this.timerId);\r\n            _this.timerId = setTimeout(function() {\r\n                _this.myChart.resize();\r\n            }, 280);\r\n        });\r\n    }\r\n};\r\n</script>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\">\r\n.sign {\r\n    .search-member-form {\r\n        text-align: center\r\n    }\r\n\r\n    .search-member-form>div {\r\n        text-align: left\r\n    }\r\n\r\n    .read-card .svg-icon {\r\n        font-size: 20px;\r\n    }\r\n\r\n    .info-item {\r\n        font-size: 14px;\r\n        padding: 10px 0;\r\n        line-height: 20px;\r\n    }\r\n\r\n    .info-item label {\r\n        color: #97a8be;\r\n        font-size: 14px;\r\n    }\r\n\r\n    .user-photo {\r\n        text-align: center;\r\n        font-size: 14px;\r\n    }\r\n\r\n    .user-photo img {\r\n        max-width: 100%;\r\n        max-height: 300px;\r\n        box-shadow: 0 0 1px 1px rgba(0, 0, 0, .1);\r\n    }\r\n\r\n    .card_type {\r\n        width: 100%;\r\n    }\r\n\r\n    .card_type .el-radio {\r\n        display: flex;\r\n        padding: 11px 0;\r\n    }\r\n\r\n    .card_type .el-radio+.el-radio {\r\n        margin-left: 0;\r\n    }\r\n\r\n    .card_type .el-radio__label {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        width: 80%;\r\n    }\r\n\r\n    .card_type .el-radio__label>div {\r\n        padding: 0 5px 10px 5px;\r\n    }\r\n\r\n    .sign-tongji {\r\n        .select_store {\r\n            padding-left: 10px;\r\n            margin-bottom: 10px;\r\n        }\r\n\r\n        .today-tongji-wrap {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n\r\n        .today-tongji {\r\n            display: flex;\r\n            flex-direction: column;\r\n            text-align: center;\r\n            color: #3c3c3c;\r\n            .today-tongji-title {\r\n                font-size: 20px;\r\n            }\r\n            .today-tongji-count {\r\n                font-size: 60px;\r\n                line-height: 80px;\r\n            }\r\n            .other {\r\n                color: #a8a8a8;\r\n                font-size: 14px;\r\n                line-height: 20px;\r\n            }\r\n        }\r\n\r\n        .el-card {\r\n            margin: 10px 0;\r\n            height: 300px;\r\n        }\r\n\r\n        .my-chart-wrap .el-card__body {\r\n            padding: 0;\r\n        }\r\n\r\n        .count-range {\r\n            display: flex;\r\n            align-items: center;\r\n            padding: 0 15px;\r\n            height: 70px;\r\n            .el-date-editor {\r\n                margin: 10px;\r\n            }\r\n        }\r\n\r\n        .myChart {\r\n            height: 230px;\r\n        }\r\n    }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// index.vue?6933518a","var Path = require(\"../Path\");\n\n/**\n * 内外旋轮曲线\n * @module zrender/graphic/shape/Trochold\n */\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nvar _default = Path.extend({\n  type: 'trochoid',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0,\n    d: 0,\n    location: 'out'\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var R = shape.r;\n    var r = shape.r0;\n    var d = shape.d;\n    var offsetX = shape.cx;\n    var offsetY = shape.cy;\n    var delta = shape.location == 'out' ? 1 : -1;\n\n    if (shape.location && R <= r) {\n      return;\n    }\n\n    var num = 0;\n    var i = 1;\n    var theta;\n    x1 = (R + delta * r) * cos(0) - delta * d * cos(0) + offsetX;\n    y1 = (R + delta * r) * sin(0) - d * sin(0) + offsetY;\n    ctx.moveTo(x1, y1); // 计算结束时的i\n\n    do {\n      num++;\n    } while (r * num % (R + delta * r) !== 0);\n\n    do {\n      theta = Math.PI / 180 * i;\n      x2 = (R + delta * r) * cos(theta) - delta * d * cos((R / r + delta) * theta) + offsetX;\n      y2 = (R + delta * r) * sin(theta) - d * sin((R / r + delta) * theta) + offsetY;\n      ctx.lineTo(x2, y2);\n      i++;\n    } while (i <= r * num / (R + delta * r) * 360);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Trochoid.js\n// module id = qg9n\n// module chunks = 0","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = qjrH\n// module chunks = 0","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = qjvV\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = rctg\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            onZeroAxisIndex: null,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            fontSize: 12\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n        // maxInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = s/lY\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var AxisView = require('./AxisView');\n    var cartesianAxisHelper = require('./cartesianAxisHelper');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = s48c\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * n角星（n>3）\n * @module zrender/graphic/shape/Star\n */\nvar PI = Math.PI;\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nvar _default = Path.extend({\n  type: 'star',\n  shape: {\n    cx: 0,\n    cy: 0,\n    n: 3,\n    r0: null,\n    r: 0\n  },\n  buildPath: function (ctx, shape) {\n    var n = shape.n;\n\n    if (!n || n < 2) {\n      return;\n    }\n\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = shape.r;\n    var r0 = shape.r0; // 如果未指定内部顶点外接圆半径，则自动计算\n\n    if (r0 == null) {\n      r0 = n > 4 // 相隔的外部顶点的连线的交点，\n      // 被取为内部交点，以此计算r0\n      ? r * cos(2 * PI / n) / cos(PI / n) // 二三四角星的特殊处理\n      : r / 3;\n    }\n\n    var dStep = PI / n;\n    var deg = -PI / 2;\n    var xStart = x + r * cos(deg);\n    var yStart = y + r * sin(deg);\n    deg += dStep; // 记录边界点，用于判断inside\n\n    ctx.moveTo(xStart, yStart);\n\n    for (var i = 0, end = n * 2 - 1, ri; i < end; i++) {\n      ri = i % 2 === 0 ? r0 : r;\n      ctx.lineTo(x + ri * cos(deg), y + ri * sin(deg));\n      deg += dStep;\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Star.js\n// module id = sGy6\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = sRta\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = tBuv\n// module chunks = 0","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = taS8\n// module chunks = 0","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = u+XU\n// module chunks = 0","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = u5Nq\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":false,\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-577d32ea\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"86c66e86\", content, false);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":false,\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-577d32ea\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":false,\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-577d32ea\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader!./~/css-loader?{\"minimize\":false,\"sourceMap\":false}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-577d32ea\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/sign/index.vue\n// module id = u8/3\n// module chunks = 0","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = u820\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = uJBW\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 椭圆形状\n * @module zrender/graphic/shape/Ellipse\n */\nvar _default = Path.extend({\n  type: 'ellipse',\n  shape: {\n    cx: 0,\n    cy: 0,\n    rx: 0,\n    ry: 0\n  },\n  buildPath: function (ctx, shape) {\n    var k = 0.5522848;\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.rx;\n    var b = shape.ry;\n    var ox = a * k; // 水平控制点偏移量\n\n    var oy = b * k; // 垂直控制点偏移量\n    // 从椭圆的左端点开始顺时针绘制四条三次贝塞尔曲线\n\n    ctx.moveTo(x - a, y);\n    ctx.bezierCurveTo(x - a, y - oy, x - ox, y - b, x, y - b);\n    ctx.bezierCurveTo(x + ox, y - b, x + a, y - oy, x + a, y);\n    ctx.bezierCurveTo(x + a, y + oy, x + ox, y + b, x, y + b);\n    ctx.bezierCurveTo(x - ox, y + b, x - a, y + oy, x - a, y);\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ellipse.js\n// module id = udrn\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/is-iterable\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/is-iterable.js\n// module id = us/S\n// module chunks = 0 1 2","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = vXqC\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemLabelModel = labelModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemLabelModel = new Model(\n                        categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                    );\n                }\n\n                var textColor = itemLabelModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                graphic.setTextStyle(textEl.style, itemLabelModel, {\n                    text: labels[index],\n                    textAlign: itemLabelModel.getShallow('align', true)\n                        || labelLayout.textAlign,\n                    textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                        || itemLabelModel.getShallow('baseline', true)\n                        || labelLayout.textVerticalAlign,\n                    textFill: typeof textColor === 'function'\n                        ? textColor(\n                            // (1) In category axis with data zoom, tick is not the original\n                            // index of axis.data. So tick should not be exposed to user\n                            // in category axis.\n                            // (2) Compatible with previous version, which always returns labelStr.\n                            // But in interval scale labelStr is like '223,445', which maked\n                            // user repalce ','. So we modify it to return original val but remain\n                            // it as 'string' to avoid error in replacing.\n                            axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                            index\n                        )\n                        : textColor\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = vjPX\n// module chunks = 0","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = wEU0\n// module chunks = 0","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/entries.js\n// module id = wEtr\n// module chunks = 0 1","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = wRzc\n// module chunks = 0","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = wUOi\n// module chunks = 0","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = wW3A\n// module chunks = 0","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = wWR3\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 水滴形状\n * @module zrender/graphic/shape/Droplet\n */\nvar _default = Path.extend({\n  type: 'droplet',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.width;\n    var b = shape.height;\n    ctx.moveTo(x, y + a);\n    ctx.bezierCurveTo(x + a, y + a, x + a * 3 / 2, y - a / 3, x, y - b);\n    ctx.bezierCurveTo(x - a * 3 / 2, y - a / 3, x - a, y + a, x, y + a);\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Droplet.js\n// module id = wsnU\n// module chunks = 0","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = xCbH\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                    compatLabelTextStyle(mpData[i] && mpData[i].label);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                        compatItemStyle(mlData[i][1]);\n                        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                        compatLabelTextStyle(mlData[i] && mlData[i].label);\n                    }\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option, isTheme) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n        isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n\n        each(\n            axes,\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            if (isObject(geoOpt)) {\n                compatLabelTextStyle(geoOpt.label);\n                each(toArr(geoOpt.regions), function (regionObj) {\n                    compatLabelTextStyle(regionObj.label);\n                });\n            }\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = xb/I\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 玫瑰线\n * @module zrender/graphic/shape/Rose\n */\nvar sin = Math.sin;\nvar cos = Math.cos;\nvar radian = Math.PI / 180;\n\nvar _default = Path.extend({\n  type: 'rose',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: [],\n    k: 0,\n    n: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x;\n    var y;\n    var R = shape.r;\n    var r;\n    var k = shape.k;\n    var n = shape.n;\n    var x0 = shape.cx;\n    var y0 = shape.cy;\n    ctx.moveTo(x0, y0);\n\n    for (var i = 0, len = R.length; i < len; i++) {\n      r = R[i];\n\n      for (var j = 0; j <= 360 * n; j++) {\n        x = r * sin(k / n * j % 360 * radian) * cos(j * radian) + x0;\n        y = r * sin(k / n * j % 360 * radian) * sin(j * radian) + y0;\n        ctx.lineTo(x, y);\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rose.js\n// module id = ynWU\n// module chunks = 0","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = yt/B\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = zAPJ\n// module chunks = 0","var _zrender = require(\"./lib/zrender\");\n\n(function () {\n  for (var key in _zrender) {\n    if (_zrender == null || !_zrender.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _zrender[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/svg/svg\");\n\nrequire(\"./lib/vml/vml\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/index.js\n// module id = zEoQ\n// module chunks = 0","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = zMj2\n// module chunks = 0","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/CartesianAxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = zz1u\n// module chunks = 0"],"sourceRoot":""}